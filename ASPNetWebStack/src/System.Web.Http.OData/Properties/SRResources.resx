<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotSerializerNull" xml:space="preserve">
    <value>Cannot serialize a null '{0}'.</value>
  </data>
  <data name="TypeCannotBeSerialized" xml:space="preserve">
    <value>'{0}' cannot be serialized using the {1}.</value>
  </data>
  <data name="WriteObjectInlineNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObjectInline.</value>
  </data>
  <data name="PropertyMustHavePublicGetterAndSetter" xml:space="preserve">
    <value>The PropertyInfo provided must have public 'get' and 'set' accessor methods.</value>
  </data>
  <data name="CreateODataValueNotSupported" xml:space="preserve">
    <value>{0} does not support CreateODataValue.</value>
  </data>
  <data name="TypeMustBeEntityCollection" xml:space="preserve">
    <value>{0} is not a collection of type {1}. Only entity collections are supported.</value>
  </data>
  <data name="WriteObjectNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObject.</value>
  </data>
  <data name="UriQueryStringInvalid" xml:space="preserve">
    <value>The query specified in the URI is not valid.</value>
  </data>
  <data name="LambdaExpressionMustHaveExactlyOneParameter" xml:space="preserve">
    <value>The LambdaExpression must have exactly one parameter.</value>
  </data>
  <data name="MemberExpressionsMustBeBoundToLambdaParameter" xml:space="preserve">
    <value>MemberExpressions must be bound to the LambdaExpression parameter.</value>
  </data>
  <data name="MemberExpressionsMustBeProperties" xml:space="preserve">
    <value>Member '{0}.{1}' is not a property.</value>
  </data>
  <data name="UnsupportedExpressionNodeType" xml:space="preserve">
    <value>Unsupported Expression NodeType.</value>
  </data>
  <data name="FailedToBuildEdmModelBecauseReturnTypeIsNull" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a void return type.</value>
  </data>
  <data name="FailedToRetrieveTypeToBuildEdmModel" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable&lt;T&gt;.</value>
  </data>
  <data name="QueryParameterNotSupported" xml:space="preserve">
    <value>The query parameter '{0}' is not supported.</value>
  </data>
  <data name="RequestMustContainConfiguration" xml:space="preserve">
    <value>Request message does not contain an HttpConfiguration object.</value>
  </data>
  <data name="ActionContextMustHaveDescriptor" xml:space="preserve">
    <value>The HttpActionContext.ActionDescriptor is null.</value>
  </data>
  <data name="ActionContextMustHaveRequest" xml:space="preserve">
    <value>The HttpActionContext.Request is null.</value>
  </data>
  <data name="ActionExecutedContextMustHaveActionContext" xml:space="preserve">
    <value>The HttpActionExecutedContext.ActionContext is null.</value>
  </data>
  <data name="ActionExecutedContextMustHaveRequest" xml:space="preserve">
    <value>The HttpExecutedActionContext.Request is null.</value>
  </data>
  <data name="OrderByClauseNotSupported" xml:space="preserve">
    <value>Only ordering by properties at the root level is supported for non-primitive collections. Nested properties and expressions are not supported.</value>
  </data>
  <data name="CanNotParseInteger" xml:space="preserve">
    <value>Failed to convert '{0}' to an integer.</value>
  </data>
  <data name="EntitySetNotFoundForName" xml:space="preserve">
    <value>No EntitySet exists in the EdmModel with entitySetName '{0}'.</value>
  </data>
  <data name="QueryCannotBeEmpty" xml:space="preserve">
    <value>The value for OData query '{0}' cannot be empty.</value>
  </data>
  <data name="EdmTypeNotSupported" xml:space="preserve">
    <value>{0} is not an supported edm type.</value>
  </data>
  <data name="MultipleMatchingClrTypesForEdmType" xml:space="preserve">
    <value>More than one matching clr type found for the Edm type {0}.\nThe matching clr types are {1}.</value>
  </data>
  <data name="ODataFunctionNotSupported" xml:space="preserve">
    <value>Unknown function '{0}'.</value>
  </data>
  <data name="QueryNodeBindingNotSupported" xml:space="preserve">
    <value>Binding OData QueryNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="OrderByDuplicateProperty" xml:space="preserve">
    <value>Duplicate property named '{0}' is not supported in '$orderby'.</value>
  </data>
  <data name="ErrorTypeMustBeODataErrorOrHttpError" xml:space="preserve">
    <value>The type '{0}' is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError.</value>
  </data>
  <data name="CannotAutoCreateMultipleCandidates" xml:space="preserve">
    <value>Cannot automatically bind the navigation property '{0}' on entity type '{1}' for the source entity set '{2}' because there are two or more matching target entity sets. The matching entity sets are: {3}.</value>
  </data>
  <data name="PropertyDoesNotBelongToType" xml:space="preserve">
    <value>The property '{0}' does not belong to the type '{1}'.</value>
  </data>
  <data name="EntitySetAlreadyConfiguredDifferentEntityType" xml:space="preserve">
    <value>The entity set '{0}' was already configured with a different EntityType ('{1}').</value>
  </data>
  <data name="TypeCannotBeComplexWasEntity" xml:space="preserve">
    <value>The type '{0}' cannot be configured as a ComplexType. It was previously configured as an EntityType.</value>
  </data>
  <data name="TypeCannotBeEntityWasComplex" xml:space="preserve">
    <value>The type '{0}' cannot be configured as a EntityType. It was previously configured as an ComplexType.</value>
  </data>
  <data name="RecursiveComplexTypesNotAllowed" xml:space="preserve">
    <value>The complex type '{0}' has a reference to itself through the property '{1}'. A recursive loop of complex types is not allowed.</value>
  </data>
  <data name="DeserializerDoesNotSupportRead" xml:space="preserve">
    <value>'{0}' does not support Read.</value>
  </data>
  <data name="MappingDoesNotContainEntityType" xml:space="preserve">
    <value>The provided mapping doesn't contain an entry for the entity type '{0}'.</value>
  </data>
  <data name="NoIdLinkFactoryFound" xml:space="preserve">
    <value>No IdLink factory was found. Try calling HasIdLink on the EntitySetConfiguration for '{0}'.</value>
  </data>
  <data name="ManyToManyNavigationPropertyMustReturnCollection" xml:space="preserve">
    <value>The property '{0}' on the type '{1}' is being configured as a Many-to-Many navigation property. Many to Many navigation properties must be collections.</value>
  </data>
  <data name="DoesNotSupportReadInLine" xml:space="preserve">
    <value>Type '{0}' does not support ReadInline.</value>
  </data>
  <data name="FormatterReadIsNotSupportedForType" xml:space="preserve">
    <value>Reading type '{0}' is not supported by '{1}'.</value>
  </data>
  <data name="MustBeComplexProperty" xml:space="preserve">
    <value>The property '{0}' on type '{1}' must be a Complex property.</value>
  </data>
  <data name="MustBeNavigationProperty" xml:space="preserve">
    <value>The property  '{0}' on type '{1}' must be a Navigation property.</value>
  </data>
  <data name="MustBePrimitiveProperty" xml:space="preserve">
    <value>The property '{0}'  on type '{1}' must be a Primitive property.</value>
  </data>
  <data name="MustHaveMatchingMultiplicity" xml:space="preserve">
    <value>The multiplicity of the '{0}' property must be '{1}'.</value>
  </data>
  <data name="MustBePrimitiveType" xml:space="preserve">
    <value>The type '{0}' must be a primitive type.</value>
  </data>
  <data name="RebindingNotSupported" xml:space="preserve">
    <value>Rebinding is not supported.</value>
  </data>
  <data name="MaxNodeLimitExceeded" xml:space="preserve">
    <value>The node count limit of '{0}' has been exceeded. To increase the limit, set the '{1}' property on QueryableAttribute or ODataValidationSettings.</value>
  </data>
  <data name="NoNavigationLinkFactoryFound" xml:space="preserve">
    <value>No NavigationLink factory was found for the navigation property '{0}' from entity type '{1}' on entity set '{2}'. Try calling HasNavigationPropertyLink on the EntitySetConfiguration.</value>
  </data>
  <data name="InvalidEntitySetName" xml:space="preserve">
    <value>'{0}' is not a valid entity set name.</value>
  </data>
  <data name="CannotCastFilter" xml:space="preserve">
    <value>Cannot cast $filter of type '{0}' to type '{1}'.</value>
  </data>
  <data name="ComplexTypeRefersToEntityType" xml:space="preserve">
    <value>The complex type '{0}' refers to the entity type '{1}' through the property '{2}'.</value>
  </data>
  <data name="MultipleAttributesFound" xml:space="preserve">
    <value>The member '{0}' on type '{1}' contains multiple instances of the attribute '{2}'.</value>
  </data>
  <data name="GetEdmModelCalledMoreThanOnce" xml:space="preserve">
    <value>GetEdmModel cannot be called more than once. Consider using a different instance of the model builder or reusing the model you have built earlier.</value>
  </data>
  <data name="CollectionPropertiesMustReturnIEnumerable" xml:space="preserve">
    <value>CollectionProperties must implement IEnumerable&lt;&gt;. The Property '{0}' declared on '{1}' does not implement IEnumerable&lt;&gt;. </value>
  </data>
  <data name="MustBeCollectionProperty" xml:space="preserve">
    <value>The '{0}' property on '{1}' must be a Collection property.</value>
  </data>
  <data name="CannotPatchNavigationProperties" xml:space="preserve">
    <value>Cannot apply PATCH to navigation property '{0}' on entity type '{1}'.</value>
  </data>
  <data name="PropertyMustBeString" xml:space="preserve">
    <value>The value must be a string.</value>
  </data>
  <data name="PropertyMustBeStringLengthOne" xml:space="preserve">
    <value>The value must be a string with a length of 1.</value>
  </data>
  <data name="PropertyMustBeStringMaxLengthOne" xml:space="preserve">
    <value>The value must be a string with a maximum length of 1.</value>
  </data>
  <data name="ArgumentMustBeOfType" xml:space="preserve">
    <value>The argument must be of type '{0}'.</value>
  </data>
  <data name="CollectionShouldHaveAddMethod" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="InvalidBindingParameterType" xml:space="preserve">
    <value>Invalid bindingParameter type '{0}'. A bindingParameter must be either an EntityType or a Collection of EntityTypes.</value>
  </data>
  <data name="InvalidParameterType" xml:space="preserve">
    <value>Invalid parameter type '{0}'. A non-binding parameter type must be either Primitive, Complex, Collection of Primitive or a Collection of Complex.</value>
  </data>
  <data name="MoreThanOneProcedureFound" xml:space="preserve">
    <value>More than one Procedure called '{0}' was found. Try using the other RemoveProcedure override.</value>
  </data>
  <data name="NoMatchingIEdmTypeFound" xml:space="preserve">
    <value>No IEdmType could be found for '{0}'.</value>
  </data>
  <data name="UnsupportedEdmTypeKind" xml:space="preserve">
    <value>Found unsupported EdmTypeKind '{0}' in list of available types.</value>
  </data>
  <data name="CannotDefineKeysOnDerivedTypes" xml:space="preserve">
    <value>Cannot define keys on type '{0}' deriving from '{1}'. Only the root type in the entity inheritance hierarchy can contain keys.</value>
  </data>
  <data name="CannotRedefineBaseTypeProperty" xml:space="preserve">
    <value>Cannot redefine property '{0}' already defined on the base type '{1}'.</value>
  </data>
  <data name="TypeDoesNotInheritFromBaseType" xml:space="preserve">
    <value>'{0}' does not inherit from '{1}'.</value>
  </data>
  <data name="PropertyAlreadyDefinedInDerivedType" xml:space="preserve">
    <value>Cannot define property '{0}' in the base entity type '{1}' as the derived type '{2}' already defines it.</value>
  </data>
  <data name="ConvertToEnumFailed" xml:space="preserve">
    <value>Cannot compare an enum of type '{0}' to an expression of type '{1}'.</value>
  </data>
  <data name="FunctionNotSupportedOnEnum" xml:space="preserve">
    <value>The '{0}' function cannot be applied to an enumeration-typed argument.</value>
  </data>
  <data name="CannotInstantiateAbstractEntityType" xml:space="preserve">
    <value>An instance of the abstract entity type '{0}' was found. Abstract entity types cannot be instantiated.</value>
  </data>
  <data name="NullElementInCollection" xml:space="preserve">
    <value>Collections cannot contain null elements.</value>
  </data>
  <data name="WriteToStreamAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter does not support writing client requests. This formatter instance must have an associated request.</value>
  </data>
  <data name="ActionResolutionFailed" xml:space="preserve">
    <value>Action resolution failed. Multiple actions matching the action identifier '{0}' were found. The matching actions are: {1}.</value>
  </data>
  <data name="ValueIsInvalid" xml:space="preserve">
    <value>The value '{0}' is invalid. {1}</value>
  </data>
  <data name="ModelBinderUtil_ModelMetadataCannotBeNull" xml:space="preserve">
    <value>The binding context cannot have a null ModelMetadata.</value>
  </data>
  <data name="EntityTypeMismatch" xml:space="preserve">
    <value>The entity type '{0}' does not match the expected entity type '{1}' as set on the query context.</value>
  </data>
  <data name="CannotApplyODataQueryOptionsOfT" xml:space="preserve">
    <value>Cannot apply {0} of '{1}' to {2} of '{3}'.</value>
  </data>
  <data name="HasActionLinkRequiresBindToEntity" xml:space="preserve">
    <value>To register an action link factory, actions must be bindable to a single entity. Action '{0}' does not meet this requirement.</value>
  </data>
  <data name="NavigationPropertyNotInHierarchy" xml:space="preserve">
    <value>The declaring entity type '{0}' of the given navigation property is not a part of the entity type '{1}' hierarchy of the entity set '{2}'.</value>
  </data>
  <data name="TargetEntityTypeMissing" xml:space="preserve">
    <value>Could not find the target entity type for the navigation property '{0}' on entity type '{1}'.</value>
  </data>
  <data name="KeyValueCannotBeNull" xml:space="preserve">
    <value>Key property '{0}' of type '{1}' is null. Key properties cannot have null values.</value>
  </data>
  <data name="BinaryOperatorNotSupported" xml:space="preserve">
    <value>A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.</value>
  </data>
  <data name="QueryingRequiresObjectContent" xml:space="preserve">
    <value>Queries can not be applied to a response content of type '{0}'. The response content must be an ObjectContent.</value>
  </data>
  <data name="MaxAnyAllExpressionLimitExceeded" xml:space="preserve">
    <value>The Any/All nesting limit of '{0}' has been exceeded. '{1}' can be configured on ODataQuerySettings or QueryableAttribute.</value>
  </data>
  <data name="CannotAddToNullCollection" xml:space="preserve">
    <value>The property '{0}' on type '{1}' returned a null value. The input stream contains collection items which cannot be added if the instance is null.</value>
  </data>
  <data name="PropertyIsNotCollection" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' must be a collection.</value>
  </data>
  <data name="GetOnlyCollectionCannotBeArray" xml:space="preserve">
    <value>The value of the property '{0}' on type '{1}' is an array. Consider adding a setter for the property.</value>
  </data>
  <data name="PreviousSegmentEdmTypeCannotBeNull" xml:space="preserve">
    <value>The previous path segment cannot have a null value as its EdmType.</value>
  </data>
  <data name="InvalidPathSegment" xml:space="preserve">
    <value>The URI segment '{0}' is invalid after the segment '{1}'.</value>
  </data>
  <data name="NoActionFoundForCollection" xml:space="preserve">
    <value>Invalid action detected. '{0}' is not an action that can bind to 'Collection({1})'.</value>
  </data>
  <data name="ParserModelMustHaveOneContainer" xml:space="preserve">
    <value>The parser requires an EDM model with exactly 1 entity container. {0} entity containers were found.</value>
  </data>
  <data name="PreviousSegmentMustBeCollectionType" xml:space="preserve">
    <value>The previous segment's EDM type '{0}' must be a collection type.</value>
  </data>
  <data name="PreviousSegmentMustBeComplexType" xml:space="preserve">
    <value>The previous segment's EDM type '{0}' must be a complex type.</value>
  </data>
  <data name="PreviousSegmentMustBeEntityCollectionType" xml:space="preserve">
    <value>The previous segment's EDM type '{0}' must be an entity collection type.</value>
  </data>
  <data name="PreviousSegmentMustBeEntityType" xml:space="preserve">
    <value>The previous segment's EDM type '{0}' must be an entity type.</value>
  </data>
  <data name="InvalidCastInPath" xml:space="preserve">
    <value>Invalid cast encountered. Cast type '{0}' must be the same as or derive from the previous segment's type '{1}'.</value>
  </data>
  <data name="SegmentNullOrEmpty" xml:space="preserve">
    <value>The segment value must not be null or empty.</value>
  </data>
  <data name="RequestNotActionInvocation" xml:space="preserve">
    <value>The last segment of the request URI '{0}' was not recognized as an OData action.</value>
  </data>
  <data name="NoMatchingResource" xml:space="preserve">
    <value>No HTTP resource was found that matches the request URI '{0}'.</value>
  </data>
  <data name="NoRoutingHandlerToSelectAction" xml:space="preserve">
    <value>No routing convention was found to select an action for the OData path with template '{0}'.</value>
  </data>
  <data name="DeltaTypeMismatch" xml:space="preserve">
    <value>Cannot use Delta of type '{0}' on an entity of type '{1}'.</value>
  </data>
  <data name="DeltaEntityTypeNotAssignable" xml:space="preserve">
    <value>The actual entity type '{0}' is not assignable to the expected type '{1}'.</value>
  </data>
  <data name="EntitySetControllerErrorMessageLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Language tag of the error messages according to RFC4646.</comment>
  </data>
  <data name="EntitySetControllerUnmappedRequest" xml:space="preserve">
    <value>This service doesn't support OData requests in the form '{0}'.</value>
  </data>
  <data name="EntitySetControllerUnmappedRequestErrorCode" xml:space="preserve">
    <value>Not implemented.</value>
  </data>
  <data name="EntitySetControllerUnsupportedCreate" xml:space="preserve">
    <value>Creating entities is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedCreateLink" xml:space="preserve">
    <value>Creating a '{0}' link is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedCreateLinkErrorCode" xml:space="preserve">
    <value>Creating link failed.</value>
  </data>
  <data name="EntitySetControllerUnsupportedDelete" xml:space="preserve">
    <value>Deleting entities is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedDeleteLink" xml:space="preserve">
    <value>Deleting a '{0}' link is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedDeleteLinkErrorCode" xml:space="preserve">
    <value>Deleting link failed.</value>
  </data>
  <data name="EntitySetControllerUnsupportedGet" xml:space="preserve">
    <value>Getting entities is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedGetByKey" xml:space="preserve">
    <value>Getting entities by key is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedGetByKeyErrorCode" xml:space="preserve">
    <value>GET requests by key are not supported.</value>
  </data>
  <data name="EntitySetControllerUnsupportedMethodErrorCode" xml:space="preserve">
    <value>{0} requests are not supported.</value>
  </data>
  <data name="EntitySetControllerUnsupportedGetKey" xml:space="preserve">
    <value>Extracting the key from entity instances is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedPatch" xml:space="preserve">
    <value>Patching entities is not supported for this entity set.</value>
  </data>
  <data name="EntitySetControllerUnsupportedUpdate" xml:space="preserve">
    <value>Replacing entities is not supported for this entity set.</value>
  </data>
  <data name="NotAllowedArithmeticOperator" xml:space="preserve">
    <value>Arithmetic operator '{0}' is not allowed. To allow it, set the '{1}' property on QueryableAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedFunction" xml:space="preserve">
    <value>Function '{0}' is not allowed. To allow it, set the '{1}' property on QueryableAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedLogicalOperator" xml:space="preserve">
    <value>Logical operator '{0}' is not allowed. To allow it, set the '{1}' property on QueryableAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedOrderByProperty" xml:space="preserve">
    <value>Order by '{0}' is not allowed. To allow it, set the '{1}' property on QueryableAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedQueryOption" xml:space="preserve">
    <value>Query option '{0}' is not allowed. To allow it, set the '{1}' property on QueryableAttribute or QueryValidationSettings.</value>
  </data>
  <data name="SkipTopLimitExceeded" xml:space="preserve">
    <value>The limit of '{0}' for {1} query has been exceeded. The value from the incoming request is '{2}'.</value>
  </data>
  <data name="FromODataUriRequiresPrimitive" xml:space="preserve">
    <value>Type '{0}' is not a valid EDM primitive. The [FromODataUri] attribute can only be used on parameters with types that correspond to EDM primitives.</value>
  </data>
  <data name="EntitySetMissingDuringSerialization" xml:space="preserve">
    <value>The related entity set could not be found from the OData path. The related entity set is required to serialize the payload.</value>
  </data>
  <data name="NavigationPropertyMissingDuringSerialization" xml:space="preserve">
    <value>The related navigation property could not be found from the OData path. The related navigation property is required to serialize the payload.</value>
  </data>
  <data name="UnsupportedPrimitiveType" xml:space="preserve">
    <value>The type '{0}' is not a supported primitive type.</value>
  </data>
  <data name="UnableToDetermineMetadataUrl" xml:space="preserve">
    <value>The ODataMediaTypeFormatter must be able to determine the metadata URL for a request in order to serialize the response.</value>
  </data>
  <data name="InvalidInlineCount" xml:space="preserve">
    <value>'{0}' is not a valid value for $inlinecount.</value>
  </data>
  <data name="ODataPathMissing" xml:space="preserve">
    <value>The operation cannot be completed because no ODataPath is available for the request.</value>
  </data>
  <data name="OrderByDuplicateIt" xml:space="preserve">
    <value>Multiple '$it' nodes are not supported in '$orderby'.</value>
  </data>
  <data name="ClrTypeNotInModel" xml:space="preserve">
    <value>The given model does not contain the type '{0}'.</value>
  </data>
  <data name="ReadFromStreamAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter requires an attached request in order to deserialize. Controller classes must derive from ODataController or be marked with ODataFormattingAttribute. Custom parameter bindings must call GetPerRequestFormatterInstance on each formatter and use these per-request instances.</value>
  </data>
  <data name="EntitySetMissingDuringDeserialization" xml:space="preserve">
    <value>The related entity set could not be found from the OData path. The related entity set is required to deserialize the payload.</value>
  </data>
  <data name="NavigationPropertyMissingDuringDeserialization" xml:space="preserve">
    <value>The related navigation property could not be found from the OData path. The related navigation property is required to deserialize the payload.</value>
  </data>
  <data name="RequestMustHaveModel" xml:space="preserve">
    <value>The request must have an associated EDM model. Consider using the extension method HttpConfiguration.Routes.MapODataRoute to register a route that parses the OData URI and attaches the model information.</value>
  </data>
  <data name="QueryGetModelMustNotReturnNull" xml:space="preserve">
    <value>A model is required for querying. Consider implementing the QueryableAttribute.GetModel method never to return a null value.</value>
  </data>
  <data name="RequestMustHaveODataRouteName" xml:space="preserve">
    <value>The request must have an associated OData route name. Consider using the extension method request.SetODataRouteName to set a route name.</value>
  </data>
  <data name="LocationHeaderDoesNotStartWithEntitySet" xml:space="preserve">
    <value>A Location header could not be generated because the request's OData path does not start with an entity set path segment.</value>
  </data>
  <data name="LocationHeaderMissingODataPath" xml:space="preserve">
    <value>A Location header could not be generated because the request does not have an associated OData path.</value>
  </data>
  <data name="ManyNavigationPropertiesCannotBeChanged" xml:space="preserve">
    <value>Cannot change multiplicity of the collection navigation property '{0}'.</value>
  </data>
  <data name="UnableToDetermineBaseUrl" xml:space="preserve">
    <value>The ODataMediaTypeFormatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response.</value>
  </data>
  <data name="ItemTypeOfCollectionNull" xml:space="preserve">
    <value>The element type of an EDM collection type cannot be null.</value>
  </data>
  <data name="CannotWriteType" xml:space="preserve">
    <value>{0} cannot write an object of type '{1}'.</value>
  </data>
  <data name="RootElementNameMissing" xml:space="preserve">
    <value>The 'RootElementName' property is required on '{0}'.</value>
  </data>
  <data name="TypeCannotBeDeserialized" xml:space="preserve">
    <value>'{0}' cannot be deserialized using the {1}.</value>
  </data>
  <data name="EntityTypeNotInModel" xml:space="preserve">
    <value>Cannot find the entity type '{0}' in the model.</value>
  </data>
  <data name="ModelMissingFromReadContext" xml:space="preserve">
    <value>The EDM model is missing on the read context. The model is required on the read context to deserialize the payload.</value>
  </data>
  <data name="NavigationPropertyNotfound" xml:space="preserve">
    <value>Cannot find navigation property '{0}' on the entity type '{1}'.</value>
  </data>
  <data name="SelectExpandEmptyOrNull" xml:space="preserve">
    <value>'select' and 'expand' cannot be both null or empty.</value>
  </data>
  <data name="SelectionTypeNotSupported" xml:space="preserve">
    <value>$select does not support selections of type '{0}'.</value>
  </data>
  <data name="SelectNonEntity" xml:space="preserve">
    <value>The type '{0}' is not an entity type. Only entity types support $select and $expand.</value>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>The EDM instance of type '{0}' is missing the property '{1}'.</value>
  </data>
  <data name="EdmTypeCannotBeNull" xml:space="preserve">
    <value>The EDM type of the object of type '{0}' is null. The EDM type of an {1} cannot be null.</value>
  </data>
  <data name="EdmObjectNull" xml:space="preserve">
    <value>The property 'EdmObject' of {0} cannot be null.</value>
  </data>
  <data name="BatchRequestInvalidMediaType" xml:space="preserve">
    <value>The batch request must have '{0}' as the media type.</value>
  </data>
  <data name="BatchRequestMissingBoundary" xml:space="preserve">
    <value>The batch request must have a boundary specification in the "Content-Type" header.</value>
  </data>
  <data name="BatchRequestMissingContentType" xml:space="preserve">
    <value>The batch request must have a "Content-Type" header.</value>
  </data>
  <data name="InvalidBatchReaderState" xml:space="preserve">
    <value>The current batch reader state '{0}' is invalid. The expected state is '{1}'.</value>
  </data>
  <data name="BatchRequestMissingContent" xml:space="preserve">
    <value>The 'Content' property on the batch request cannot be null.</value>
  </data>
  <data name="MaxExpandDepthExceeded" xml:space="preserve">
    <value>The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the '{1}' property on QueryableAttribute or ODataValidationSettings.</value>
  </data>
  <data name="NonSelectExpandOnSingleEntity" xml:space="preserve">
    <value>The requested resource is not a collection. Query options $filter, $orderby, $inlinecount, $skip, and $top can be applied only on collections.</value>
  </data>
  <data name="SingleResultHasMoreThanOneEntity" xml:space="preserve">
    <value>The action '{0}' on controller '{1}' returned a {2} containing more than one element. {2} must have zero or one elements.</value>
  </data>
  <data name="UnsupportedSelectExpandPath" xml:space="preserve">
    <value>A path within the select or expand query option is not supported.</value>
  </data>
  <data name="UrlHelperNull" xml:space="preserve">
    <value>The property 'Url' of {0} cannot be null.</value>
  </data>
  <data name="EdmComplexObjectNullRef" xml:space="preserve">
    <value>Cannot get property '{0}' of a null EDM object of type '{1}'.</value>
  </data>
  <data name="UnsupportedEdmType" xml:space="preserve">
    <value>The EDM type '{0}' of kind '{1}' is not supported.</value>
  </data>
  <data name="UnexpectedElementType" xml:space="preserve">
    <value>The element type '{0}' of the given collection type '{1}' is not of the type '{2}'.</value>
  </data>
  <data name="ActionNotBoundToEntity" xml:space="preserve">
    <value>The action '{0}' is not bound to an entity. Only actions that are bound to entities can have action links.</value>
  </data>
  <data name="ODataPathInvalid" xml:space="preserve">
    <value>The OData path is invalid.</value>
  </data>
</root>
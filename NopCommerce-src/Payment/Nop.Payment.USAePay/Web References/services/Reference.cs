//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace NopSolutions.NopCommerce.Payment.Methods.USAePay.services {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ueSoapServerBinding", Namespace="urn:usaepay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchParam))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Bank))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CurrencyObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldValue))]
    public partial class usaepayService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMerchantApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback bulkCurrencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback captureTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback convertTranToCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback currencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMerchantOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMerchantOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMerchantApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMerchantSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupportedCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback postAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickUpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback refundTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCustomerTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runAuthOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback runSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchMerchantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchMerchantsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchMerchantsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMerchantOperationCompleted;
        
        private System.Threading.SendOrPostCallback voidTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback overrideTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public usaepayService() {
            this.Url = global::NopSolutions.NopCommerce.Payment.Methods.USAePay.Properties.Settings.Default.Nop_Payment_USAePay_services_usaepayService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCustomerCompletedEventHandler addCustomerCompleted;
        
        /// <remarks/>
        public event addCustomerPaymentMethodCompletedEventHandler addCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event addMerchantApplicationCompletedEventHandler addMerchantApplicationCompleted;
        
        /// <remarks/>
        public event bulkCurrencyConversionCompletedEventHandler bulkCurrencyConversionCompleted;
        
        /// <remarks/>
        public event captureTransactionCompletedEventHandler captureTransactionCompleted;
        
        /// <remarks/>
        public event closeBatchCompletedEventHandler closeBatchCompleted;
        
        /// <remarks/>
        public event convertTranToCustCompletedEventHandler convertTranToCustCompleted;
        
        /// <remarks/>
        public event copyCustomerCompletedEventHandler copyCustomerCompleted;
        
        /// <remarks/>
        public event createBatchUploadCompletedEventHandler createBatchUploadCompleted;
        
        /// <remarks/>
        public event currencyConversionCompletedEventHandler currencyConversionCompleted;
        
        /// <remarks/>
        public event deleteCustomerCompletedEventHandler deleteCustomerCompleted;
        
        /// <remarks/>
        public event deleteCustomerPaymentMethodCompletedEventHandler deleteCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event deleteMerchantCompletedEventHandler deleteMerchantCompleted;
        
        /// <remarks/>
        public event disableCustomerCompletedEventHandler disableCustomerCompleted;
        
        /// <remarks/>
        public event enableCustomerCompletedEventHandler enableCustomerCompleted;
        
        /// <remarks/>
        public event getAccountDetailsCompletedEventHandler getAccountDetailsCompleted;
        
        /// <remarks/>
        public event getBankListCompletedEventHandler getBankListCompleted;
        
        /// <remarks/>
        public event getBatchStatusCompletedEventHandler getBatchStatusCompleted;
        
        /// <remarks/>
        public event getBatchTransactionsCompletedEventHandler getBatchTransactionsCompleted;
        
        /// <remarks/>
        public event getBatchUploadStatusCompletedEventHandler getBatchUploadStatusCompleted;
        
        /// <remarks/>
        public event getCustomerCompletedEventHandler getCustomerCompleted;
        
        /// <remarks/>
        public event getCustomerHistoryCompletedEventHandler getCustomerHistoryCompleted;
        
        /// <remarks/>
        public event getMerchantCompletedEventHandler getMerchantCompleted;
        
        /// <remarks/>
        public event getCustomerPaymentMethodCompletedEventHandler getCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event getCustomerPaymentMethodsCompletedEventHandler getCustomerPaymentMethodsCompleted;
        
        /// <remarks/>
        public event getMerchantApplicationStatusCompletedEventHandler getMerchantApplicationStatusCompleted;
        
        /// <remarks/>
        public event getMerchantSummaryCompletedEventHandler getMerchantSummaryCompleted;
        
        /// <remarks/>
        public event getSupportedCurrenciesCompletedEventHandler getSupportedCurrenciesCompleted;
        
        /// <remarks/>
        public event getTransactionCompletedEventHandler getTransactionCompleted;
        
        /// <remarks/>
        public event getTransactionCustomCompletedEventHandler getTransactionCustomCompleted;
        
        /// <remarks/>
        public event getTransactionReportCompletedEventHandler getTransactionReportCompleted;
        
        /// <remarks/>
        public event getTransactionStatusCompletedEventHandler getTransactionStatusCompleted;
        
        /// <remarks/>
        public event moveCustomerCompletedEventHandler moveCustomerCompleted;
        
        /// <remarks/>
        public event pauseBatchUploadCompletedEventHandler pauseBatchUploadCompleted;
        
        /// <remarks/>
        public event postAuthCompletedEventHandler postAuthCompleted;
        
        /// <remarks/>
        public event quickUpdateCustomerCompletedEventHandler quickUpdateCustomerCompleted;
        
        /// <remarks/>
        public event refundTransactionCompletedEventHandler refundTransactionCompleted;
        
        /// <remarks/>
        public event runBatchUploadCompletedEventHandler runBatchUploadCompleted;
        
        /// <remarks/>
        public event runCreditCompletedEventHandler runCreditCompleted;
        
        /// <remarks/>
        public event runCheckCreditCompletedEventHandler runCheckCreditCompleted;
        
        /// <remarks/>
        public event runCustomerTransactionCompletedEventHandler runCustomerTransactionCompleted;
        
        /// <remarks/>
        public event runQuickSaleCompletedEventHandler runQuickSaleCompleted;
        
        /// <remarks/>
        public event runQuickCreditCompletedEventHandler runQuickCreditCompleted;
        
        /// <remarks/>
        public event runAuthOnlyCompletedEventHandler runAuthOnlyCompleted;
        
        /// <remarks/>
        public event runSaleCompletedEventHandler runSaleCompleted;
        
        /// <remarks/>
        public event runCheckSaleCompletedEventHandler runCheckSaleCompleted;
        
        /// <remarks/>
        public event runTransactionCompletedEventHandler runTransactionCompleted;
        
        /// <remarks/>
        public event runTransactionAPICompletedEventHandler runTransactionAPICompleted;
        
        /// <remarks/>
        public event searchBatchesCompletedEventHandler searchBatchesCompleted;
        
        /// <remarks/>
        public event searchBatchesCountCompletedEventHandler searchBatchesCountCompleted;
        
        /// <remarks/>
        public event searchCustomerIDCompletedEventHandler searchCustomerIDCompleted;
        
        /// <remarks/>
        public event searchCustomersCompletedEventHandler searchCustomersCompleted;
        
        /// <remarks/>
        public event searchCustomersCountCompletedEventHandler searchCustomersCountCompleted;
        
        /// <remarks/>
        public event searchMerchantsCompletedEventHandler searchMerchantsCompleted;
        
        /// <remarks/>
        public event searchMerchantsCountCompletedEventHandler searchMerchantsCountCompleted;
        
        /// <remarks/>
        public event searchMerchantsCustomCompletedEventHandler searchMerchantsCustomCompleted;
        
        /// <remarks/>
        public event searchTransactionsCompletedEventHandler searchTransactionsCompleted;
        
        /// <remarks/>
        public event searchTransactionsCountCompletedEventHandler searchTransactionsCountCompleted;
        
        /// <remarks/>
        public event searchTransactionsCustomCompletedEventHandler searchTransactionsCustomCompleted;
        
        /// <remarks/>
        public event searchCustomersCustomCompletedEventHandler searchCustomersCustomCompleted;
        
        /// <remarks/>
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// <remarks/>
        public event updateCustomerPaymentMethodCompletedEventHandler updateCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event updateMerchantCompletedEventHandler updateMerchantCompleted;
        
        /// <remarks/>
        public event voidTransactionCompletedEventHandler voidTransactionCompleted;
        
        /// <remarks/>
        public event overrideTransactionCompletedEventHandler overrideTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerReturn", DataType="integer")]
        public string addCustomer(ueSecurityToken Token, CustomerObject CustomerData) {
            object[] results = this.Invoke("addCustomer", new object[] {
                        Token,
                        CustomerData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData) {
            this.addCustomerAsync(Token, CustomerData, null);
        }
        
        /// <remarks/>
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData, object userState) {
            if ((this.addCustomerOperationCompleted == null)) {
                this.addCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerOperationCompleted);
            }
            this.InvokeAsync("addCustomer", new object[] {
                        Token,
                        CustomerData}, this.addCustomerOperationCompleted, userState);
        }
        
        private void OnaddCustomerOperationCompleted(object arg) {
            if ((this.addCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerCompleted(this, new addCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerPaymentMethodReturn", DataType="integer")]
        public string addCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            object[] results = this.Invoke("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            this.addCustomerPaymentMethodAsync(Token, CustNum, PaymentMethod, MakeDefault, Verify, null);
        }
        
        /// <remarks/>
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify, object userState) {
            if ((this.addCustomerPaymentMethodOperationCompleted == null)) {
                this.addCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify}, this.addCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnaddCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.addCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerPaymentMethodCompleted(this, new addCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addMerchantApplicationReturn", DataType="integer")]
        public string addMerchantApplication(ueSecurityToken Token, MerchantApplicationObject Application) {
            object[] results = this.Invoke("addMerchantApplication", new object[] {
                        Token,
                        Application});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addMerchantApplicationAsync(ueSecurityToken Token, MerchantApplicationObject Application) {
            this.addMerchantApplicationAsync(Token, Application, null);
        }
        
        /// <remarks/>
        public void addMerchantApplicationAsync(ueSecurityToken Token, MerchantApplicationObject Application, object userState) {
            if ((this.addMerchantApplicationOperationCompleted == null)) {
                this.addMerchantApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMerchantApplicationOperationCompleted);
            }
            this.InvokeAsync("addMerchantApplication", new object[] {
                        Token,
                        Application}, this.addMerchantApplicationOperationCompleted, userState);
        }
        
        private void OnaddMerchantApplicationOperationCompleted(object arg) {
            if ((this.addMerchantApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMerchantApplicationCompleted(this, new addMerchantApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("bulkCurrencyConversionReturn")]
        public CurrencyConversion[] bulkCurrencyConversion(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            object[] results = this.Invoke("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts});
            return ((CurrencyConversion[])(results[0]));
        }
        
        /// <remarks/>
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            this.bulkCurrencyConversionAsync(Token, FromCurrency, ToCurrency, Amounts, null);
        }
        
        /// <remarks/>
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts, object userState) {
            if ((this.bulkCurrencyConversionOperationCompleted == null)) {
                this.bulkCurrencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbulkCurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts}, this.bulkCurrencyConversionOperationCompleted, userState);
        }
        
        private void OnbulkCurrencyConversionOperationCompleted(object arg) {
            if ((this.bulkCurrencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bulkCurrencyConversionCompleted(this, new bulkCurrencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("captureTransactionReturn")]
        public TransactionResponse captureTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.captureTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// <remarks/>
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.captureTransactionOperationCompleted == null)) {
                this.captureTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaptureTransactionOperationCompleted);
            }
            this.InvokeAsync("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.captureTransactionOperationCompleted, userState);
        }
        
        private void OncaptureTransactionOperationCompleted(object arg) {
            if ((this.captureTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.captureTransactionCompleted(this, new captureTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("closeBatchReturn")]
        public bool closeBatch(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("closeBatch", new object[] {
                        Token,
                        BatchRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum) {
            this.closeBatchAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.closeBatchOperationCompleted == null)) {
                this.closeBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseBatchOperationCompleted);
            }
            this.InvokeAsync("closeBatch", new object[] {
                        Token,
                        BatchRefNum}, this.closeBatchOperationCompleted, userState);
        }
        
        private void OncloseBatchOperationCompleted(object arg) {
            if ((this.closeBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeBatchCompleted(this, new closeBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("convertTranToCustReturn", DataType="integer")]
        public string convertTranToCust(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData) {
            this.convertTranToCustAsync(Token, RefNum, UpdateData, null);
        }
        
        /// <remarks/>
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData, object userState) {
            if ((this.convertTranToCustOperationCompleted == null)) {
                this.convertTranToCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconvertTranToCustOperationCompleted);
            }
            this.InvokeAsync("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData}, this.convertTranToCustOperationCompleted, userState);
        }
        
        private void OnconvertTranToCustOperationCompleted(object arg) {
            if ((this.convertTranToCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.convertTranToCustCompleted(this, new convertTranToCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("copyCustomerReturn", DataType="integer")]
        public string copyCustomer(ueSecurityToken CopyFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken CopyToToken) {
            object[] results = this.Invoke("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken) {
            this.copyCustomerAsync(CopyFromToken, CustNum, CopyToToken, null);
        }
        
        /// <remarks/>
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken, object userState) {
            if ((this.copyCustomerOperationCompleted == null)) {
                this.copyCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyCustomerOperationCompleted);
            }
            this.InvokeAsync("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken}, this.copyCustomerOperationCompleted, userState);
        }
        
        private void OncopyCustomerOperationCompleted(object arg) {
            if ((this.copyCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCustomerCompleted(this, new copyCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("createBatchUploadReturn")]
        public BatchUploadStatus createBatchUpload(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            object[] results = this.Invoke("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// <remarks/>
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            this.createBatchUploadAsync(Token, FileName, AutoStart, Format, Encoding, Fields, Data, OverrideDuplicates, null);
        }
        
        /// <remarks/>
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates, object userState) {
            if ((this.createBatchUploadOperationCompleted == null)) {
                this.createBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBatchUploadOperationCompleted);
            }
            this.InvokeAsync("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates}, this.createBatchUploadOperationCompleted, userState);
        }
        
        private void OncreateBatchUploadOperationCompleted(object arg) {
            if ((this.createBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBatchUploadCompleted(this, new createBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("currencyConversionReturn")]
        public CurrencyConversion currencyConversion(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string FromCurrency, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ToCurrency, double Amount) {
            object[] results = this.Invoke("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount});
            return ((CurrencyConversion)(results[0]));
        }
        
        /// <remarks/>
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount) {
            this.currencyConversionAsync(Token, FromCurrency, ToCurrency, Amount, null);
        }
        
        /// <remarks/>
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount, object userState) {
            if ((this.currencyConversionOperationCompleted == null)) {
                this.currencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount}, this.currencyConversionOperationCompleted, userState);
        }
        
        private void OncurrencyConversionOperationCompleted(object arg) {
            if ((this.currencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.currencyConversionCompleted(this, new currencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerReturn")]
        public bool deleteCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("deleteCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.deleteCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.deleteCustomerOperationCompleted == null)) {
                this.deleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("deleteCustomer", new object[] {
                        Token,
                        CustNum}, this.deleteCustomerOperationCompleted, userState);
        }
        
        private void OndeleteCustomerOperationCompleted(object arg) {
            if ((this.deleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerCompleted(this, new deleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerPaymentMethodReturn")]
        public bool deleteCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Custnum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID) {
            object[] results = this.Invoke("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID) {
            this.deleteCustomerPaymentMethodAsync(Token, Custnum, PaymentMethodID, null);
        }
        
        /// <remarks/>
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID, object userState) {
            if ((this.deleteCustomerPaymentMethodOperationCompleted == null)) {
                this.deleteCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID}, this.deleteCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OndeleteCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.deleteCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerPaymentMethodCompleted(this, new deleteCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteMerchantReturn")]
        public bool deleteMerchant(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MerchantID, string Reason) {
            object[] results = this.Invoke("deleteMerchant", new object[] {
                        Token,
                        MerchantID,
                        Reason});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteMerchantAsync(ueSecurityToken Token, string MerchantID, string Reason) {
            this.deleteMerchantAsync(Token, MerchantID, Reason, null);
        }
        
        /// <remarks/>
        public void deleteMerchantAsync(ueSecurityToken Token, string MerchantID, string Reason, object userState) {
            if ((this.deleteMerchantOperationCompleted == null)) {
                this.deleteMerchantOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMerchantOperationCompleted);
            }
            this.InvokeAsync("deleteMerchant", new object[] {
                        Token,
                        MerchantID,
                        Reason}, this.deleteMerchantOperationCompleted, userState);
        }
        
        private void OndeleteMerchantOperationCompleted(object arg) {
            if ((this.deleteMerchantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMerchantCompleted(this, new deleteMerchantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("disableCustomerReturn")]
        public bool disableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("disableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.disableCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.disableCustomerOperationCompleted == null)) {
                this.disableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableCustomerOperationCompleted);
            }
            this.InvokeAsync("disableCustomer", new object[] {
                        Token,
                        CustNum}, this.disableCustomerOperationCompleted, userState);
        }
        
        private void OndisableCustomerOperationCompleted(object arg) {
            if ((this.disableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableCustomerCompleted(this, new disableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("enableCustomerReturn")]
        public bool enableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("enableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.enableCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.enableCustomerOperationCompleted == null)) {
                this.enableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableCustomerOperationCompleted);
            }
            this.InvokeAsync("enableCustomer", new object[] {
                        Token,
                        CustNum}, this.enableCustomerOperationCompleted, userState);
        }
        
        private void OnenableCustomerOperationCompleted(object arg) {
            if ((this.enableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableCustomerCompleted(this, new enableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAccountDetailsReturn")]
        public AccountDetails getAccountDetails(ueSecurityToken Token) {
            object[] results = this.Invoke("getAccountDetails", new object[] {
                        Token});
            return ((AccountDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountDetailsAsync(ueSecurityToken Token) {
            this.getAccountDetailsAsync(Token, null);
        }
        
        /// <remarks/>
        public void getAccountDetailsAsync(ueSecurityToken Token, object userState) {
            if ((this.getAccountDetailsOperationCompleted == null)) {
                this.getAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("getAccountDetails", new object[] {
                        Token}, this.getAccountDetailsOperationCompleted, userState);
        }
        
        private void OngetAccountDetailsOperationCompleted(object arg) {
            if ((this.getAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountDetailsCompleted(this, new getAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBankListDetailsReturn")]
        public Bank[] getBankList(ueSecurityToken Token) {
            object[] results = this.Invoke("getBankList", new object[] {
                        Token});
            return ((Bank[])(results[0]));
        }
        
        /// <remarks/>
        public void getBankListAsync(ueSecurityToken Token) {
            this.getBankListAsync(Token, null);
        }
        
        /// <remarks/>
        public void getBankListAsync(ueSecurityToken Token, object userState) {
            if ((this.getBankListOperationCompleted == null)) {
                this.getBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankListOperationCompleted);
            }
            this.InvokeAsync("getBankList", new object[] {
                        Token}, this.getBankListOperationCompleted, userState);
        }
        
        private void OngetBankListOperationCompleted(object arg) {
            if ((this.getBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankListCompleted(this, new getBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchStatusReturn")]
        public BatchStatus getBatchStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum});
            return ((BatchStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchStatusAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchStatusOperationCompleted == null)) {
                this.getBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchStatusOperationCompleted, userState);
        }
        
        private void OngetBatchStatusOperationCompleted(object arg) {
            if ((this.getBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchStatusCompleted(this, new getBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchTransactionsReturn")]
        public TransactionObject[] getBatchTransactions(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum});
            return ((TransactionObject[])(results[0]));
        }
        
        /// <remarks/>
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchTransactionsAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchTransactionsOperationCompleted == null)) {
                this.getBatchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchTransactionsOperationCompleted);
            }
            this.InvokeAsync("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchTransactionsOperationCompleted, userState);
        }
        
        private void OngetBatchTransactionsOperationCompleted(object arg) {
            if ((this.getBatchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchTransactionsCompleted(this, new getBatchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchUploadStatusReturn")]
        public BatchUploadStatus getBatchUploadStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum) {
            this.getBatchUploadStatusAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.getBatchUploadStatusOperationCompleted == null)) {
                this.getBatchUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum}, this.getBatchUploadStatusOperationCompleted, userState);
        }
        
        private void OngetBatchUploadStatusOperationCompleted(object arg) {
            if ((this.getBatchUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchUploadStatusCompleted(this, new getBatchUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerReturn")]
        public CustomerObject getCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomer", new object[] {
                        Token,
                        CustNum});
            return ((CustomerObject)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerOperationCompleted == null)) {
                this.getCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerOperationCompleted);
            }
            this.InvokeAsync("getCustomer", new object[] {
                        Token,
                        CustNum}, this.getCustomerOperationCompleted, userState);
        }
        
        private void OngetCustomerOperationCompleted(object arg) {
            if ((this.getCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerCompleted(this, new getCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerHistoryReturn")]
        public TransactionSearchResult getCustomerHistory(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerHistory", new object[] {
                        Token,
                        CustNum});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerHistoryAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerHistoryOperationCompleted == null)) {
                this.getCustomerHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerHistoryOperationCompleted);
            }
            this.InvokeAsync("getCustomerHistory", new object[] {
                        Token,
                        CustNum}, this.getCustomerHistoryOperationCompleted, userState);
        }
        
        private void OngetCustomerHistoryOperationCompleted(object arg) {
            if ((this.getCustomerHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerHistoryCompleted(this, new getCustomerHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMerchantReturn")]
        public MerchantObject getMerchant(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MerchantID) {
            object[] results = this.Invoke("getMerchant", new object[] {
                        Token,
                        MerchantID});
            return ((MerchantObject)(results[0]));
        }
        
        /// <remarks/>
        public void getMerchantAsync(ueSecurityToken Token, string MerchantID) {
            this.getMerchantAsync(Token, MerchantID, null);
        }
        
        /// <remarks/>
        public void getMerchantAsync(ueSecurityToken Token, string MerchantID, object userState) {
            if ((this.getMerchantOperationCompleted == null)) {
                this.getMerchantOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMerchantOperationCompleted);
            }
            this.InvokeAsync("getMerchant", new object[] {
                        Token,
                        MerchantID}, this.getMerchantOperationCompleted, userState);
        }
        
        private void OngetMerchantOperationCompleted(object arg) {
            if ((this.getMerchantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMerchantCompleted(this, new getMerchantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodReturn")]
        public PaymentMethod getCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MethodID) {
            object[] results = this.Invoke("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID});
            return ((PaymentMethod)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID) {
            this.getCustomerPaymentMethodAsync(Token, CustNum, MethodID, null);
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID, object userState) {
            if ((this.getCustomerPaymentMethodOperationCompleted == null)) {
                this.getCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID}, this.getCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodCompleted(this, new getCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodsReturn")]
        public PaymentMethod[] getCustomerPaymentMethods(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum});
            return ((PaymentMethod[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerPaymentMethodsAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerPaymentMethodsOperationCompleted == null)) {
                this.getCustomerPaymentMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodsOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum}, this.getCustomerPaymentMethodsOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodsOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodsCompleted(this, new getCustomerPaymentMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMerchantApplicationStatusReturn")]
        public string getMerchantApplicationStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ApplicationID) {
            object[] results = this.Invoke("getMerchantApplicationStatus", new object[] {
                        Token,
                        ApplicationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMerchantApplicationStatusAsync(ueSecurityToken Token, string ApplicationID) {
            this.getMerchantApplicationStatusAsync(Token, ApplicationID, null);
        }
        
        /// <remarks/>
        public void getMerchantApplicationStatusAsync(ueSecurityToken Token, string ApplicationID, object userState) {
            if ((this.getMerchantApplicationStatusOperationCompleted == null)) {
                this.getMerchantApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMerchantApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("getMerchantApplicationStatus", new object[] {
                        Token,
                        ApplicationID}, this.getMerchantApplicationStatusOperationCompleted, userState);
        }
        
        private void OngetMerchantApplicationStatusOperationCompleted(object arg) {
            if ((this.getMerchantApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMerchantApplicationStatusCompleted(this, new getMerchantApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMerchantSummaryReturn")]
        public MerchantSummaryObject getMerchantSummary(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MerchantID, string Start, string End) {
            object[] results = this.Invoke("getMerchantSummary", new object[] {
                        Token,
                        MerchantID,
                        Start,
                        End});
            return ((MerchantSummaryObject)(results[0]));
        }
        
        /// <remarks/>
        public void getMerchantSummaryAsync(ueSecurityToken Token, string MerchantID, string Start, string End) {
            this.getMerchantSummaryAsync(Token, MerchantID, Start, End, null);
        }
        
        /// <remarks/>
        public void getMerchantSummaryAsync(ueSecurityToken Token, string MerchantID, string Start, string End, object userState) {
            if ((this.getMerchantSummaryOperationCompleted == null)) {
                this.getMerchantSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMerchantSummaryOperationCompleted);
            }
            this.InvokeAsync("getMerchantSummary", new object[] {
                        Token,
                        MerchantID,
                        Start,
                        End}, this.getMerchantSummaryOperationCompleted, userState);
        }
        
        private void OngetMerchantSummaryOperationCompleted(object arg) {
            if ((this.getMerchantSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMerchantSummaryCompleted(this, new getMerchantSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSupportedCurrenciesReturn")]
        public CurrencyObject[] getSupportedCurrencies(ueSecurityToken Token) {
            object[] results = this.Invoke("getSupportedCurrencies", new object[] {
                        Token});
            return ((CurrencyObject[])(results[0]));
        }
        
        /// <remarks/>
        public void getSupportedCurrenciesAsync(ueSecurityToken Token) {
            this.getSupportedCurrenciesAsync(Token, null);
        }
        
        /// <remarks/>
        public void getSupportedCurrenciesAsync(ueSecurityToken Token, object userState) {
            if ((this.getSupportedCurrenciesOperationCompleted == null)) {
                this.getSupportedCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedCurrenciesOperationCompleted);
            }
            this.InvokeAsync("getSupportedCurrencies", new object[] {
                        Token}, this.getSupportedCurrenciesOperationCompleted, userState);
        }
        
        private void OngetSupportedCurrenciesOperationCompleted(object arg) {
            if ((this.getSupportedCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupportedCurrenciesCompleted(this, new getSupportedCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReturn")]
        public TransactionObject getTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransaction", new object[] {
                        Token,
                        RefNum});
            return ((TransactionObject)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionOperationCompleted == null)) {
                this.getTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionOperationCompleted);
            }
            this.InvokeAsync("getTransaction", new object[] {
                        Token,
                        RefNum}, this.getTransactionOperationCompleted, userState);
        }
        
        private void OngetTransactionOperationCompleted(object arg) {
            if ((this.getTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCompleted(this, new getTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionCustomReturn")]
        public FieldValue[] getTransactionCustom(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string[] Fields) {
            object[] results = this.Invoke("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields});
            return ((FieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields) {
            this.getTransactionCustomAsync(Token, RefNum, Fields, null);
        }
        
        /// <remarks/>
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields, object userState) {
            if ((this.getTransactionCustomOperationCompleted == null)) {
                this.getTransactionCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionCustomOperationCompleted);
            }
            this.InvokeAsync("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields}, this.getTransactionCustomOperationCompleted, userState);
        }
        
        private void OngetTransactionCustomOperationCompleted(object arg) {
            if ((this.getTransactionCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCustomCompleted(this, new getTransactionCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReportReturn")]
        public string getTransactionReport(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            object[] results = this.Invoke("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            this.getTransactionReportAsync(Token, StartDate, EndDate, Report, Format, null);
        }
        
        /// <remarks/>
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format, object userState) {
            if ((this.getTransactionReportOperationCompleted == null)) {
                this.getTransactionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionReportOperationCompleted);
            }
            this.InvokeAsync("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format}, this.getTransactionReportOperationCompleted, userState);
        }
        
        private void OngetTransactionReportOperationCompleted(object arg) {
            if ((this.getTransactionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionReportCompleted(this, new getTransactionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionStatusReturn")]
        public TransactionResponse getTransactionStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransactionStatus", new object[] {
                        Token,
                        RefNum});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionStatusAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionStatusOperationCompleted == null)) {
                this.getTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatus", new object[] {
                        Token,
                        RefNum}, this.getTransactionStatusOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusOperationCompleted(object arg) {
            if ((this.getTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusCompleted(this, new getTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveCustomerReturn", DataType="integer")]
        public string moveCustomer(ueSecurityToken MoveFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken MoveToToken) {
            object[] results = this.Invoke("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken) {
            this.moveCustomerAsync(MoveFromToken, CustNum, MoveToToken, null);
        }
        
        /// <remarks/>
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken, object userState) {
            if ((this.moveCustomerOperationCompleted == null)) {
                this.moveCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveCustomerOperationCompleted);
            }
            this.InvokeAsync("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken}, this.moveCustomerOperationCompleted, userState);
        }
        
        private void OnmoveCustomerOperationCompleted(object arg) {
            if ((this.moveCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCustomerCompleted(this, new moveCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("pauseBatchUploadReturn")]
        public bool pauseBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.pauseBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.pauseBatchUploadOperationCompleted == null)) {
                this.pauseBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseBatchUploadOperationCompleted);
            }
            this.InvokeAsync("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.pauseBatchUploadOperationCompleted, userState);
        }
        
        private void OnpauseBatchUploadOperationCompleted(object arg) {
            if ((this.pauseBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseBatchUploadCompleted(this, new pauseBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("postAuthReturn")]
        public TransactionResponse postAuth(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("postAuth", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.postAuthAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.postAuthOperationCompleted == null)) {
                this.postAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostAuthOperationCompleted);
            }
            this.InvokeAsync("postAuth", new object[] {
                        Token,
                        Params}, this.postAuthOperationCompleted, userState);
        }
        
        private void OnpostAuthOperationCompleted(object arg) {
            if ((this.postAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postAuthCompleted(this, new postAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("quickUpdateCustomerReturn")]
        public bool quickUpdateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData) {
            this.quickUpdateCustomerAsync(Token, CustNum, UpdateData, null);
        }
        
        /// <remarks/>
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData, object userState) {
            if ((this.quickUpdateCustomerOperationCompleted == null)) {
                this.quickUpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData}, this.quickUpdateCustomerOperationCompleted, userState);
        }
        
        private void OnquickUpdateCustomerOperationCompleted(object arg) {
            if ((this.quickUpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickUpdateCustomerCompleted(this, new quickUpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("refundTransactionReturn")]
        public TransactionResponse refundTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.refundTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// <remarks/>
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.refundTransactionOperationCompleted == null)) {
                this.refundTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefundTransactionOperationCompleted);
            }
            this.InvokeAsync("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.refundTransactionOperationCompleted, userState);
        }
        
        private void OnrefundTransactionOperationCompleted(object arg) {
            if ((this.refundTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refundTransactionCompleted(this, new refundTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runBatchUploadReturn")]
        public bool runBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.runBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.runBatchUploadOperationCompleted == null)) {
                this.runBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunBatchUploadOperationCompleted);
            }
            this.InvokeAsync("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.runBatchUploadOperationCompleted, userState);
        }
        
        private void OnrunBatchUploadOperationCompleted(object arg) {
            if ((this.runBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runBatchUploadCompleted(this, new runBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCreditReturn")]
        public TransactionResponse runCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCreditAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCreditOperationCompleted == null)) {
                this.runCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCreditOperationCompleted);
            }
            this.InvokeAsync("runCredit", new object[] {
                        Token,
                        Params}, this.runCreditOperationCompleted, userState);
        }
        
        private void OnrunCreditOperationCompleted(object arg) {
            if ((this.runCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCreditCompleted(this, new runCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckCreditReturn")]
        public TransactionResponse runCheckCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckCreditAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckCreditOperationCompleted == null)) {
                this.runCheckCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckCreditOperationCompleted);
            }
            this.InvokeAsync("runCheckCredit", new object[] {
                        Token,
                        Params}, this.runCheckCreditOperationCompleted, userState);
        }
        
        private void OnrunCheckCreditOperationCompleted(object arg) {
            if ((this.runCheckCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckCreditCompleted(this, new runCheckCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCustomerTransactionReturn")]
        public TransactionResponse runCustomerTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, CustomerTransactionDetail Details, string Command, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID) {
            object[] results = this.Invoke("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        Details,
                        Command,
                        PaymentMethodID});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, CustomerTransactionDetail Details, string Command, string PaymentMethodID) {
            this.runCustomerTransactionAsync(Token, CustNum, Details, Command, PaymentMethodID, null);
        }
        
        /// <remarks/>
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, CustomerTransactionDetail Details, string Command, string PaymentMethodID, object userState) {
            if ((this.runCustomerTransactionOperationCompleted == null)) {
                this.runCustomerTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCustomerTransactionOperationCompleted);
            }
            this.InvokeAsync("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        Details,
                        Command,
                        PaymentMethodID}, this.runCustomerTransactionOperationCompleted, userState);
        }
        
        private void OnrunCustomerTransactionOperationCompleted(object arg) {
            if ((this.runCustomerTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCustomerTransactionCompleted(this, new runCustomerTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickSaleReturn")]
        public TransactionResponse runQuickSale(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details, bool AuthOnly) {
            object[] results = this.Invoke("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly) {
            this.runQuickSaleAsync(Token, RefNum, Details, AuthOnly, null);
        }
        
        /// <remarks/>
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly, object userState) {
            if ((this.runQuickSaleOperationCompleted == null)) {
                this.runQuickSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickSaleOperationCompleted);
            }
            this.InvokeAsync("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly}, this.runQuickSaleOperationCompleted, userState);
        }
        
        private void OnrunQuickSaleOperationCompleted(object arg) {
            if ((this.runQuickSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickSaleCompleted(this, new runQuickSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickCreditReturn")]
        public TransactionResponse runQuickCredit(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details) {
            object[] results = this.Invoke("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details) {
            this.runQuickCreditAsync(Token, RefNum, Details, null);
        }
        
        /// <remarks/>
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, object userState) {
            if ((this.runQuickCreditOperationCompleted == null)) {
                this.runQuickCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickCreditOperationCompleted);
            }
            this.InvokeAsync("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details}, this.runQuickCreditOperationCompleted, userState);
        }
        
        private void OnrunQuickCreditOperationCompleted(object arg) {
            if ((this.runQuickCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickCreditCompleted(this, new runQuickCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runAuthOnlyReturn")]
        public TransactionResponse runAuthOnly(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runAuthOnly", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runAuthOnlyAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runAuthOnlyOperationCompleted == null)) {
                this.runAuthOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunAuthOnlyOperationCompleted);
            }
            this.InvokeAsync("runAuthOnly", new object[] {
                        Token,
                        Params}, this.runAuthOnlyOperationCompleted, userState);
        }
        
        private void OnrunAuthOnlyOperationCompleted(object arg) {
            if ((this.runAuthOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runAuthOnlyCompleted(this, new runAuthOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runSaleReturn")]
        public TransactionResponse runSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runSaleAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runSaleOperationCompleted == null)) {
                this.runSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunSaleOperationCompleted);
            }
            this.InvokeAsync("runSale", new object[] {
                        Token,
                        Params}, this.runSaleOperationCompleted, userState);
        }
        
        private void OnrunSaleOperationCompleted(object arg) {
            if ((this.runSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runSaleCompleted(this, new runSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckSaleReturn")]
        public TransactionResponse runCheckSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckSaleAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckSaleOperationCompleted == null)) {
                this.runCheckSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckSaleOperationCompleted);
            }
            this.InvokeAsync("runCheckSale", new object[] {
                        Token,
                        Params}, this.runCheckSaleOperationCompleted, userState);
        }
        
        private void OnrunCheckSaleOperationCompleted(object arg) {
            if ((this.runCheckSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckSaleCompleted(this, new runCheckSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionReturn")]
        public TransactionResponse runTransaction(ueSecurityToken Token, TransactionRequestObject Parameters) {
            object[] results = this.Invoke("runTransaction", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters) {
            this.runTransactionAsync(Token, Parameters, null);
        }
        
        /// <remarks/>
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters, object userState) {
            if ((this.runTransactionOperationCompleted == null)) {
                this.runTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionOperationCompleted);
            }
            this.InvokeAsync("runTransaction", new object[] {
                        Token,
                        Parameters}, this.runTransactionOperationCompleted, userState);
        }
        
        private void OnrunTransactionOperationCompleted(object arg) {
            if ((this.runTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionCompleted(this, new runTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionAPIReturn")]
        public TransactionResponse runTransactionAPI(ueSecurityToken Token, FieldValue[] Parameters) {
            object[] results = this.Invoke("runTransactionAPI", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters) {
            this.runTransactionAPIAsync(Token, Parameters, null);
        }
        
        /// <remarks/>
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters, object userState) {
            if ((this.runTransactionAPIOperationCompleted == null)) {
                this.runTransactionAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionAPIOperationCompleted);
            }
            this.InvokeAsync("runTransactionAPI", new object[] {
                        Token,
                        Parameters}, this.runTransactionAPIOperationCompleted, userState);
        }
        
        private void OnrunTransactionAPIOperationCompleted(object arg) {
            if ((this.runTransactionAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionAPICompleted(this, new runTransactionAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesReturn")]
        public BatchSearchResult searchBatches(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesOperationCompleted == null)) {
                this.searchBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesOperationCompleted);
            }
            this.InvokeAsync("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesOperationCompleted, userState);
        }
        
        private void OnsearchBatchesOperationCompleted(object arg) {
            if ((this.searchBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCompleted(this, new searchBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesCountReturn")]
        public BatchSearchResult searchBatchesCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesCountOperationCompleted == null)) {
                this.searchBatchesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesCountOperationCompleted);
            }
            this.InvokeAsync("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesCountOperationCompleted, userState);
        }
        
        private void OnsearchBatchesCountOperationCompleted(object arg) {
            if ((this.searchBatchesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCountCompleted(this, new searchBatchesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomerIDReturn", DataType="integer")]
        public string searchCustomerID(ueSecurityToken Token, string CustID) {
            object[] results = this.Invoke("searchCustomerID", new object[] {
                        Token,
                        CustID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID) {
            this.searchCustomerIDAsync(Token, CustID, null);
        }
        
        /// <remarks/>
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID, object userState) {
            if ((this.searchCustomerIDOperationCompleted == null)) {
                this.searchCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomerIDOperationCompleted);
            }
            this.InvokeAsync("searchCustomerID", new object[] {
                        Token,
                        CustID}, this.searchCustomerIDOperationCompleted, userState);
        }
        
        private void OnsearchCustomerIDOperationCompleted(object arg) {
            if ((this.searchCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomerIDCompleted(this, new searchCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersReturn")]
        public CustomerSearchResult searchCustomers(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersOperationCompleted == null)) {
                this.searchCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersOperationCompleted);
            }
            this.InvokeAsync("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersOperationCompleted, userState);
        }
        
        private void OnsearchCustomersOperationCompleted(object arg) {
            if ((this.searchCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCompleted(this, new searchCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCountReturn")]
        public CustomerSearchResult searchCustomersCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersCountOperationCompleted == null)) {
                this.searchCustomersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCountOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersCountOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCountOperationCompleted(object arg) {
            if ((this.searchCustomersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCountCompleted(this, new searchCustomersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchMerchantsReturn")]
        public MerchantSearchResult searchMerchants(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchMerchants", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((MerchantSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchMerchantsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchMerchantsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchMerchantsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchMerchantsOperationCompleted == null)) {
                this.searchMerchantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchMerchantsOperationCompleted);
            }
            this.InvokeAsync("searchMerchants", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchMerchantsOperationCompleted, userState);
        }
        
        private void OnsearchMerchantsOperationCompleted(object arg) {
            if ((this.searchMerchantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchMerchantsCompleted(this, new searchMerchantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchMerchantsCountReturn")]
        public MerchantSearchResult searchMerchantsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchMerchantsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((MerchantSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchMerchantsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchMerchantsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchMerchantsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchMerchantsCountOperationCompleted == null)) {
                this.searchMerchantsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchMerchantsCountOperationCompleted);
            }
            this.InvokeAsync("searchMerchantsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchMerchantsCountOperationCompleted, userState);
        }
        
        private void OnsearchMerchantsCountOperationCompleted(object arg) {
            if ((this.searchMerchantsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchMerchantsCountCompleted(this, new searchMerchantsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchMerchantsCustomReturn")]
        public string searchMerchantsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchMerchantsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchMerchantsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchMerchantsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchMerchantsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchMerchantsCustomOperationCompleted == null)) {
                this.searchMerchantsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchMerchantsCustomOperationCompleted);
            }
            this.InvokeAsync("searchMerchantsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchMerchantsCustomOperationCompleted, userState);
        }
        
        private void OnsearchMerchantsCustomOperationCompleted(object arg) {
            if ((this.searchMerchantsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchMerchantsCustomCompleted(this, new searchMerchantsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsReturn")]
        public TransactionSearchResult searchTransactions(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsOperationCompleted == null)) {
                this.searchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsOperationCompleted);
            }
            this.InvokeAsync("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsOperationCompleted(object arg) {
            if ((this.searchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCompleted(this, new searchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCountReturn")]
        public TransactionSearchResult searchTransactionsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsCountOperationCompleted == null)) {
                this.searchTransactionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCountOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsCountOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCountOperationCompleted(object arg) {
            if ((this.searchTransactionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCountCompleted(this, new searchTransactionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCustomReturn")]
        public string searchTransactionsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchTransactionsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchTransactionsCustomOperationCompleted == null)) {
                this.searchTransactionsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCustomOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchTransactionsCustomOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCustomOperationCompleted(object arg) {
            if ((this.searchTransactionsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCustomCompleted(this, new searchTransactionsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCustomReturn")]
        public string searchCustomersCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchCustomersCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchCustomersCustomOperationCompleted == null)) {
                this.searchCustomersCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCustomOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchCustomersCustomOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCustomOperationCompleted(object arg) {
            if ((this.searchCustomersCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCustomCompleted(this, new searchCustomersCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerReturn")]
        public bool updateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, CustomerObject CustomerData) {
            object[] results = this.Invoke("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData) {
            this.updateCustomerAsync(Token, CustNum, CustomerData, null);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new updateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerPaymentMethodReturn")]
        public bool updateCustomerPaymentMethod(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            object[] results = this.Invoke("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            this.updateCustomerPaymentMethodAsync(Token, PaymentMethod, Verify, null);
        }
        
        /// <remarks/>
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify, object userState) {
            if ((this.updateCustomerPaymentMethodOperationCompleted == null)) {
                this.updateCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify}, this.updateCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnupdateCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.updateCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerPaymentMethodCompleted(this, new updateCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateMerchantReturn")]
        public bool updateMerchant(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MerchantID, MerchantObject MerchantObject) {
            object[] results = this.Invoke("updateMerchant", new object[] {
                        Token,
                        MerchantID,
                        MerchantObject});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateMerchantAsync(ueSecurityToken Token, string MerchantID, MerchantObject MerchantObject) {
            this.updateMerchantAsync(Token, MerchantID, MerchantObject, null);
        }
        
        /// <remarks/>
        public void updateMerchantAsync(ueSecurityToken Token, string MerchantID, MerchantObject MerchantObject, object userState) {
            if ((this.updateMerchantOperationCompleted == null)) {
                this.updateMerchantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMerchantOperationCompleted);
            }
            this.InvokeAsync("updateMerchant", new object[] {
                        Token,
                        MerchantID,
                        MerchantObject}, this.updateMerchantOperationCompleted, userState);
        }
        
        private void OnupdateMerchantOperationCompleted(object arg) {
            if ((this.updateMerchantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMerchantCompleted(this, new updateMerchantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("voidTransactionReturn")]
        public bool voidTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("voidTransaction", new object[] {
                        Token,
                        RefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.voidTransactionAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.voidTransactionOperationCompleted == null)) {
                this.voidTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvoidTransactionOperationCompleted);
            }
            this.InvokeAsync("voidTransaction", new object[] {
                        Token,
                        RefNum}, this.voidTransactionOperationCompleted, userState);
        }
        
        private void OnvoidTransactionOperationCompleted(object arg) {
            if ((this.voidTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.voidTransactionCompleted(this, new voidTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("overrideTransactionReturn")]
        public bool overrideTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string Reason) {
            object[] results = this.Invoke("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason) {
            this.overrideTransactionAsync(Token, RefNum, Reason, null);
        }
        
        /// <remarks/>
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason, object userState) {
            if ((this.overrideTransactionOperationCompleted == null)) {
                this.overrideTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoverrideTransactionOperationCompleted);
            }
            this.InvokeAsync("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason}, this.overrideTransactionOperationCompleted, userState);
        }
        
        private void OnoverrideTransactionOperationCompleted(object arg) {
            if ((this.overrideTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.overrideTransactionCompleted(this, new overrideTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueSecurityToken {
        
        private string clientIPField;
        
        private ueHash pinHashField;
        
        private string sourceKeyField;
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public ueHash PinHash {
            get {
                return this.pinHashField;
            }
            set {
                this.pinHashField = value;
            }
        }
        
        /// <remarks/>
        public string SourceKey {
            get {
                return this.sourceKeyField;
            }
            set {
                this.sourceKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueHash {
        
        private string hashValueField;
        
        private string seedField;
        
        private string typeField;
        
        /// <remarks/>
        public string HashValue {
            get {
                return this.hashValueField;
            }
            set {
                this.hashValueField = value;
            }
        }
        
        /// <remarks/>
        public string Seed {
            get {
                return this.seedField;
            }
            set {
                this.seedField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class MerchantSearchResult {
        
        private string limitField;
        
        private MerchantObject[] merchantsField;
        
        private string merchantsMatchedField;
        
        private string merchantsReturnedField;
        
        private string startIndexField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        public MerchantObject[] Merchants {
            get {
                return this.merchantsField;
            }
            set {
                this.merchantsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MerchantsMatched {
            get {
                return this.merchantsMatchedField;
            }
            set {
                this.merchantsMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MerchantsReturned {
            get {
                return this.merchantsReturnedField;
            }
            set {
                this.merchantsReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class MerchantObject {
        
        private string cityField;
        
        private string companyField;
        
        private string contactField;
        
        private string countryField;
        
        private string emailField;
        
        private string faxField;
        
        private string merchIDField;
        
        private string phoneField;
        
        private string stateField;
        
        private string streetField;
        
        private string street2Field;
        
        private string zipField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MerchID {
            get {
                return this.merchIDField;
            }
            set {
                this.merchIDField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerSearchResult {
        
        private CustomerObject[] customersField;
        
        private string customersMatchedField;
        
        private string customersReturnedField;
        
        private string limitField;
        
        private string startIndexField;
        
        /// <remarks/>
        public CustomerObject[] Customers {
            get {
                return this.customersField;
            }
            set {
                this.customersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersMatched {
            get {
                return this.customersMatchedField;
            }
            set {
                this.customersMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersReturned {
            get {
                return this.customersReturnedField;
            }
            set {
                this.customersReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerObject {
        
        private double amountField;
        
        private Address billingAddressField;
        
        private string custNumField;
        
        private string customDataField;
        
        private FieldValue[] customFieldsField;
        
        private string customerIDField;
        
        private string createdField;
        
        private string descriptionField;
        
        private bool enabledField;
        
        private int failuresField;
        
        private bool failuresFieldSpecified;
        
        private string modifiedField;
        
        private string nextField;
        
        private string notesField;
        
        private string numLeftField;
        
        private string orderIDField;
        
        private PaymentMethod[] paymentMethodsField;
        
        private string receiptNoteField;
        
        private string scheduleField;
        
        private bool sendReceiptField;
        
        private string sourceField;
        
        private double taxField;
        
        private string userField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CustNum {
            get {
                return this.custNumField;
            }
            set {
                this.custNumField = value;
            }
        }
        
        /// <remarks/>
        public string CustomData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public int Failures {
            get {
                return this.failuresField;
            }
            set {
                this.failuresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool FailuresSpecified {
            get {
                return this.failuresFieldSpecified;
            }
            set {
                this.failuresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string Next {
            get {
                return this.nextField;
            }
            set {
                this.nextField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft {
            get {
                return this.numLeftField;
            }
            set {
                this.numLeftField = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public PaymentMethod[] PaymentMethods {
            get {
                return this.paymentMethodsField;
            }
            set {
                this.paymentMethodsField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNote {
            get {
                return this.receiptNoteField;
            }
            set {
                this.receiptNoteField = value;
            }
        }
        
        /// <remarks/>
        public string Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        public bool SendReceipt {
            get {
                return this.sendReceiptField;
            }
            set {
                this.sendReceiptField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public double Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Address {
        
        private string cityField;
        
        private string companyField;
        
        private string countryField;
        
        private string emailField;
        
        private string faxField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string phoneField;
        
        private string stateField;
        
        private string streetField;
        
        private string street2Field;
        
        private string zipField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class FieldValue {
        
        private string fieldField;
        
        private string valueField;
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class PaymentMethod {
        
        private CheckData checkDataField;
        
        private CreditCardData creditCardDataField;
        
        private string expiresField;
        
        private string methodIDField;
        
        private string methodNameField;
        
        private string secondarySortField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        /// <remarks/>
        public CheckData CheckData {
            get {
                return this.checkDataField;
            }
            set {
                this.checkDataField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardData CreditCardData {
            get {
                return this.creditCardDataField;
            }
            set {
                this.creditCardDataField = value;
            }
        }
        
        /// <remarks/>
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MethodID {
            get {
                return this.methodIDField;
            }
            set {
                this.methodIDField = value;
            }
        }
        
        /// <remarks/>
        public string MethodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SecondarySort {
            get {
                return this.secondarySortField;
            }
            set {
                this.secondarySortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckData {
        
        private string accountField;
        
        private string accountTypeField;
        
        private string checkNumberField;
        
        private string driversLicenseField;
        
        private string driversLicenseStateField;
        
        private string recordTypeField;
        
        private string routingField;
        
        private string sSNField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicense {
            get {
                return this.driversLicenseField;
            }
            set {
                this.driversLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicenseState {
            get {
                return this.driversLicenseStateField;
            }
            set {
                this.driversLicenseStateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordType {
            get {
                return this.recordTypeField;
            }
            set {
                this.recordTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Routing {
            get {
                return this.routingField;
            }
            set {
                this.routingField = value;
            }
        }
        
        /// <remarks/>
        public string SSN {
            get {
                return this.sSNField;
            }
            set {
                this.sSNField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CreditCardData {
        
        private string avsStreetField;
        
        private string avsZipField;
        
        private string cardCodeField;
        
        private string cardExpirationField;
        
        private string cardNumberField;
        
        private bool cardPresentField;
        
        private bool cardPresentFieldSpecified;
        
        private string cardTypeField;
        
        private string cAVVField;
        
        private string dUKPTField;
        
        private string eCIField;
        
        private bool internalCardAuthField;
        
        private bool internalCardAuthFieldSpecified;
        
        private string magStripeField;
        
        private string magSupportField;
        
        private string paresField;
        
        private string signatureField;
        
        private string termTypeField;
        
        private string xIDField;
        
        /// <remarks/>
        public string AvsStreet {
            get {
                return this.avsStreetField;
            }
            set {
                this.avsStreetField = value;
            }
        }
        
        /// <remarks/>
        public string AvsZip {
            get {
                return this.avsZipField;
            }
            set {
                this.avsZipField = value;
            }
        }
        
        /// <remarks/>
        public string CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardExpiration {
            get {
                return this.cardExpirationField;
            }
            set {
                this.cardExpirationField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool CardPresent {
            get {
                return this.cardPresentField;
            }
            set {
                this.cardPresentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CardPresentSpecified {
            get {
                return this.cardPresentFieldSpecified;
            }
            set {
                this.cardPresentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CAVV {
            get {
                return this.cAVVField;
            }
            set {
                this.cAVVField = value;
            }
        }
        
        /// <remarks/>
        public string DUKPT {
            get {
                return this.dUKPTField;
            }
            set {
                this.dUKPTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ECI {
            get {
                return this.eCIField;
            }
            set {
                this.eCIField = value;
            }
        }
        
        /// <remarks/>
        public bool InternalCardAuth {
            get {
                return this.internalCardAuthField;
            }
            set {
                this.internalCardAuthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool InternalCardAuthSpecified {
            get {
                return this.internalCardAuthFieldSpecified;
            }
            set {
                this.internalCardAuthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MagStripe {
            get {
                return this.magStripeField;
            }
            set {
                this.magStripeField = value;
            }
        }
        
        /// <remarks/>
        public string MagSupport {
            get {
                return this.magSupportField;
            }
            set {
                this.magSupportField = value;
            }
        }
        
        /// <remarks/>
        public string Pares {
            get {
                return this.paresField;
            }
            set {
                this.paresField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string TermType {
            get {
                return this.termTypeField;
            }
            set {
                this.termTypeField = value;
            }
        }
        
        /// <remarks/>
        public string XID {
            get {
                return this.xIDField;
            }
            set {
                this.xIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchSearchResult {
        
        private BatchStatus[] batchesField;
        
        private string batchesMatchedField;
        
        private string batchesReturnedField;
        
        private string limitField;
        
        private string startIndexField;
        
        /// <remarks/>
        public BatchStatus[] Batches {
            get {
                return this.batchesField;
            }
            set {
                this.batchesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesMatched {
            get {
                return this.batchesMatchedField;
            }
            set {
                this.batchesMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesReturned {
            get {
                return this.batchesReturnedField;
            }
            set {
                this.batchesReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchStatus {
        
        private string batchRefNumField;
        
        private string closedField;
        
        private double creditsAmountField;
        
        private string creditsCountField;
        
        private double netAmountField;
        
        private string openedField;
        
        private double salesAmountField;
        
        private string salesCountField;
        
        private string scheduledField;
        
        private string sequenceField;
        
        private string statusField;
        
        private string transactionCountField;
        
        private double voidsAmountField;
        
        private string voidsCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum {
            get {
                return this.batchRefNumField;
            }
            set {
                this.batchRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public double CreditsAmount {
            get {
                return this.creditsAmountField;
            }
            set {
                this.creditsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount {
            get {
                return this.creditsCountField;
            }
            set {
                this.creditsCountField = value;
            }
        }
        
        /// <remarks/>
        public double NetAmount {
            get {
                return this.netAmountField;
            }
            set {
                this.netAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Opened {
            get {
                return this.openedField;
            }
            set {
                this.openedField = value;
            }
        }
        
        /// <remarks/>
        public double SalesAmount {
            get {
                return this.salesAmountField;
            }
            set {
                this.salesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount {
            get {
                return this.salesCountField;
            }
            set {
                this.salesCountField = value;
            }
        }
        
        /// <remarks/>
        public string Scheduled {
            get {
                return this.scheduledField;
            }
            set {
                this.scheduledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                this.transactionCountField = value;
            }
        }
        
        /// <remarks/>
        public double VoidsAmount {
            get {
                return this.voidsAmountField;
            }
            set {
                this.voidsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount {
            get {
                return this.voidsCountField;
            }
            set {
                this.voidsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SearchParam {
        
        private string fieldField;
        
        private string typeField;
        
        private string valueField;
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerTransactionDetail {
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private string clerkField;
        
        private string currencyField;
        
        private string descriptionField;
        
        private string commentsField;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private string invoiceField;
        
        private bool nonTaxField;
        
        private bool nonTaxFieldSpecified;
        
        private string orderIDField;
        
        private string pONumField;
        
        private double shippingField;
        
        private bool shippingFieldSpecified;
        
        private double subtotalField;
        
        private bool subtotalFieldSpecified;
        
        private string tableField;
        
        private double taxField;
        
        private bool taxFieldSpecified;
        
        private string terminalField;
        
        private double tipField;
        
        private bool tipFieldSpecified;
        
        private bool isRecurringField;
        
        private bool isRecurringFieldSpecified;
        
        private string cVVField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Clerk {
            get {
                return this.clerkField;
            }
            set {
                this.clerkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Invoice {
            get {
                return this.invoiceField;
            }
            set {
                this.invoiceField = value;
            }
        }
        
        /// <remarks/>
        public bool NonTax {
            get {
                return this.nonTaxField;
            }
            set {
                this.nonTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool NonTaxSpecified {
            get {
                return this.nonTaxFieldSpecified;
            }
            set {
                this.nonTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PONum {
            get {
                return this.pONumField;
            }
            set {
                this.pONumField = value;
            }
        }
        
        /// <remarks/>
        public double Shipping {
            get {
                return this.shippingField;
            }
            set {
                this.shippingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShippingSpecified {
            get {
                return this.shippingFieldSpecified;
            }
            set {
                this.shippingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Subtotal {
            get {
                return this.subtotalField;
            }
            set {
                this.subtotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool SubtotalSpecified {
            get {
                return this.subtotalFieldSpecified;
            }
            set {
                this.subtotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public double Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified {
            get {
                return this.taxFieldSpecified;
            }
            set {
                this.taxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Terminal {
            get {
                return this.terminalField;
            }
            set {
                this.terminalField = value;
            }
        }
        
        /// <remarks/>
        public double Tip {
            get {
                return this.tipField;
            }
            set {
                this.tipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TipSpecified {
            get {
                return this.tipFieldSpecified;
            }
            set {
                this.tipFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRecurring {
            get {
                return this.isRecurringField;
            }
            set {
                this.isRecurringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool isRecurringSpecified {
            get {
                return this.isRecurringFieldSpecified;
            }
            set {
                this.isRecurringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CVV {
            get {
                return this.cVVField;
            }
            set {
                this.cVVField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class RecurringBilling {
        
        private double amountField;
        
        private bool enabledField;
        
        private string expireField;
        
        private string nextField;
        
        private string numLeftField;
        
        private string scheduleField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string Expire {
            get {
                return this.expireField;
            }
            set {
                this.expireField = value;
            }
        }
        
        /// <remarks/>
        public string Next {
            get {
                return this.nextField;
            }
            set {
                this.nextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft {
            get {
                return this.numLeftField;
            }
            set {
                this.numLeftField = value;
            }
        }
        
        /// <remarks/>
        public string Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionRequestObject {
        
        private string accountHolderField;
        
        private string authCodeField;
        
        private Address billingAddressField;
        
        private CheckData checkDataField;
        
        private string clientIPField;
        
        private string commandField;
        
        private CreditCardData creditCardDataField;
        
        private string customerIDField;
        
        private bool custReceiptField;
        
        private bool custReceiptFieldSpecified;
        
        private TransactionDetail detailsField;
        
        private bool ignoreDuplicateField;
        
        private bool ignoreDuplicateFieldSpecified;
        
        private RecurringBilling recurringBillingField;
        
        private string refNumField;
        
        private Address shippingAddressField;
        
        private string softwareField;
        
        /// <remarks/>
        public string AccountHolder {
            get {
                return this.accountHolderField;
            }
            set {
                this.accountHolderField = value;
            }
        }
        
        /// <remarks/>
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public CheckData CheckData {
            get {
                return this.checkDataField;
            }
            set {
                this.checkDataField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public string Command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardData CreditCardData {
            get {
                return this.creditCardDataField;
            }
            set {
                this.creditCardDataField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CustReceipt {
            get {
                return this.custReceiptField;
            }
            set {
                this.custReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CustReceiptSpecified {
            get {
                return this.custReceiptFieldSpecified;
            }
            set {
                this.custReceiptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TransactionDetail Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreDuplicate {
            get {
                return this.ignoreDuplicateField;
            }
            set {
                this.ignoreDuplicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IgnoreDuplicateSpecified {
            get {
                return this.ignoreDuplicateFieldSpecified;
            }
            set {
                this.ignoreDuplicateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RecurringBilling RecurringBilling {
            get {
                return this.recurringBillingField;
            }
            set {
                this.recurringBillingField = value;
            }
        }
        
        /// <remarks/>
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
        /// <remarks/>
        public Address ShippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionDetail {
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private string clerkField;
        
        private string currencyField;
        
        private string descriptionField;
        
        private string commentsField;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private string invoiceField;
        
        private bool nonTaxField;
        
        private bool nonTaxFieldSpecified;
        
        private string orderIDField;
        
        private string pONumField;
        
        private double shippingField;
        
        private bool shippingFieldSpecified;
        
        private double subtotalField;
        
        private bool subtotalFieldSpecified;
        
        private string tableField;
        
        private double taxField;
        
        private bool taxFieldSpecified;
        
        private string terminalField;
        
        private double tipField;
        
        private bool tipFieldSpecified;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Clerk {
            get {
                return this.clerkField;
            }
            set {
                this.clerkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Invoice {
            get {
                return this.invoiceField;
            }
            set {
                this.invoiceField = value;
            }
        }
        
        /// <remarks/>
        public bool NonTax {
            get {
                return this.nonTaxField;
            }
            set {
                this.nonTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool NonTaxSpecified {
            get {
                return this.nonTaxFieldSpecified;
            }
            set {
                this.nonTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PONum {
            get {
                return this.pONumField;
            }
            set {
                this.pONumField = value;
            }
        }
        
        /// <remarks/>
        public double Shipping {
            get {
                return this.shippingField;
            }
            set {
                this.shippingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShippingSpecified {
            get {
                return this.shippingFieldSpecified;
            }
            set {
                this.shippingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Subtotal {
            get {
                return this.subtotalField;
            }
            set {
                this.subtotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool SubtotalSpecified {
            get {
                return this.subtotalFieldSpecified;
            }
            set {
                this.subtotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public double Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified {
            get {
                return this.taxFieldSpecified;
            }
            set {
                this.taxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Terminal {
            get {
                return this.terminalField;
            }
            set {
                this.terminalField = value;
            }
        }
        
        /// <remarks/>
        public double Tip {
            get {
                return this.tipField;
            }
            set {
                this.tipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TipSpecified {
            get {
                return this.tipFieldSpecified;
            }
            set {
                this.tipFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class MerchantSummaryObject {
        
        private double checkRefundsAmountField;
        
        private string checkRefundsCountField;
        
        private double checkSalesAmountField;
        
        private string checkSalesCountField;
        
        private double creditsAmountField;
        
        private string creditsCountField;
        
        private double declinesAmountField;
        
        private string declinesCountField;
        
        private string merchantIDField;
        
        private string merchantNameField;
        
        private double salesAmountField;
        
        private string salesCountField;
        
        private double voidsAmountField;
        
        private string voidsCountField;
        
        /// <remarks/>
        public double CheckRefundsAmount {
            get {
                return this.checkRefundsAmountField;
            }
            set {
                this.checkRefundsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CheckRefundsCount {
            get {
                return this.checkRefundsCountField;
            }
            set {
                this.checkRefundsCountField = value;
            }
        }
        
        /// <remarks/>
        public double CheckSalesAmount {
            get {
                return this.checkSalesAmountField;
            }
            set {
                this.checkSalesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CheckSalesCount {
            get {
                return this.checkSalesCountField;
            }
            set {
                this.checkSalesCountField = value;
            }
        }
        
        /// <remarks/>
        public double CreditsAmount {
            get {
                return this.creditsAmountField;
            }
            set {
                this.creditsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount {
            get {
                return this.creditsCountField;
            }
            set {
                this.creditsCountField = value;
            }
        }
        
        /// <remarks/>
        public double DeclinesAmount {
            get {
                return this.declinesAmountField;
            }
            set {
                this.declinesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DeclinesCount {
            get {
                return this.declinesCountField;
            }
            set {
                this.declinesCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MerchantID {
            get {
                return this.merchantIDField;
            }
            set {
                this.merchantIDField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantName {
            get {
                return this.merchantNameField;
            }
            set {
                this.merchantNameField = value;
            }
        }
        
        /// <remarks/>
        public double SalesAmount {
            get {
                return this.salesAmountField;
            }
            set {
                this.salesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount {
            get {
                return this.salesCountField;
            }
            set {
                this.salesCountField = value;
            }
        }
        
        /// <remarks/>
        public double VoidsAmount {
            get {
                return this.voidsAmountField;
            }
            set {
                this.voidsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount {
            get {
                return this.voidsCountField;
            }
            set {
                this.voidsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionSearchResult {
        
        private float authOnlyAmountField;
        
        private string authOnlyCountField;
        
        private float creditsAmountField;
        
        private string creditsCountField;
        
        private float declinesAmountField;
        
        private string declinesCountField;
        
        private float errorsAmountField;
        
        private string errorsCountField;
        
        private string limitField;
        
        private float salesAmountField;
        
        private string salesCountField;
        
        private string startIndexField;
        
        private TransactionObject[] transactionsField;
        
        private string transactionsMatchedField;
        
        private string transactionsReturnedField;
        
        private float voidsAmountField;
        
        private string voidsCountField;
        
        /// <remarks/>
        public float AuthOnlyAmount {
            get {
                return this.authOnlyAmountField;
            }
            set {
                this.authOnlyAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string AuthOnlyCount {
            get {
                return this.authOnlyCountField;
            }
            set {
                this.authOnlyCountField = value;
            }
        }
        
        /// <remarks/>
        public float CreditsAmount {
            get {
                return this.creditsAmountField;
            }
            set {
                this.creditsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount {
            get {
                return this.creditsCountField;
            }
            set {
                this.creditsCountField = value;
            }
        }
        
        /// <remarks/>
        public float DeclinesAmount {
            get {
                return this.declinesAmountField;
            }
            set {
                this.declinesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DeclinesCount {
            get {
                return this.declinesCountField;
            }
            set {
                this.declinesCountField = value;
            }
        }
        
        /// <remarks/>
        public float ErrorsAmount {
            get {
                return this.errorsAmountField;
            }
            set {
                this.errorsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorsCount {
            get {
                return this.errorsCountField;
            }
            set {
                this.errorsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        public float SalesAmount {
            get {
                return this.salesAmountField;
            }
            set {
                this.salesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount {
            get {
                return this.salesCountField;
            }
            set {
                this.salesCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        public TransactionObject[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsMatched {
            get {
                return this.transactionsMatchedField;
            }
            set {
                this.transactionsMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsReturned {
            get {
                return this.transactionsReturnedField;
            }
            set {
                this.transactionsReturnedField = value;
            }
        }
        
        /// <remarks/>
        public float VoidsAmount {
            get {
                return this.voidsAmountField;
            }
            set {
                this.voidsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount {
            get {
                return this.voidsCountField;
            }
            set {
                this.voidsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionObject {
        
        private string accountHolderField;
        
        private Address billingAddressField;
        
        private CheckData checkDataField;
        
        private CheckTrace checkTraceField;
        
        private string clientIPField;
        
        private CreditCardData creditCardDataField;
        
        private string customerIDField;
        
        private FieldValue[] customFieldsField;
        
        private string dateTimeField;
        
        private TransactionDetail detailsField;
        
        private TransactionResponse responseField;
        
        private string serverIPField;
        
        private Address shippingAddressField;
        
        private string sourceField;
        
        private string statusField;
        
        private string transactionTypeField;
        
        private string userField;
        
        /// <remarks/>
        public string AccountHolder {
            get {
                return this.accountHolderField;
            }
            set {
                this.accountHolderField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public CheckData CheckData {
            get {
                return this.checkDataField;
            }
            set {
                this.checkDataField = value;
            }
        }
        
        /// <remarks/>
        public CheckTrace CheckTrace {
            get {
                return this.checkTraceField;
            }
            set {
                this.checkTraceField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardData CreditCardData {
            get {
                return this.creditCardDataField;
            }
            set {
                this.creditCardDataField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public TransactionDetail Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public TransactionResponse Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        public string ServerIP {
            get {
                return this.serverIPField;
            }
            set {
                this.serverIPField = value;
            }
        }
        
        /// <remarks/>
        public Address ShippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckTrace {
        
        private string bankNoteField;
        
        private string effectiveField;
        
        private string processedField;
        
        private string returnedField;
        
        private string settledField;
        
        private string trackingNumField;
        
        /// <remarks/>
        public string BankNote {
            get {
                return this.bankNoteField;
            }
            set {
                this.bankNoteField = value;
            }
        }
        
        /// <remarks/>
        public string Effective {
            get {
                return this.effectiveField;
            }
            set {
                this.effectiveField = value;
            }
        }
        
        /// <remarks/>
        public string Processed {
            get {
                return this.processedField;
            }
            set {
                this.processedField = value;
            }
        }
        
        /// <remarks/>
        public string Returned {
            get {
                return this.returnedField;
            }
            set {
                this.returnedField = value;
            }
        }
        
        /// <remarks/>
        public string Settled {
            get {
                return this.settledField;
            }
            set {
                this.settledField = value;
            }
        }
        
        /// <remarks/>
        public string TrackingNum {
            get {
                return this.trackingNumField;
            }
            set {
                this.trackingNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionResponse {
        
        private string acsUrlField;
        
        private string authCodeField;
        
        private string avsResultField;
        
        private string avsResultCodeField;
        
        private string batchNumField;
        
        private string batchRefNumField;
        
        private string cardCodeResultField;
        
        private string cardCodeResultCodeField;
        
        private double conversionRateField;
        
        private double convertedAmountField;
        
        private string convertedAmountCurrencyField;
        
        private string custNumField;
        
        private string errorField;
        
        private string errorCodeField;
        
        private bool isDuplicateField;
        
        private string payloadField;
        
        private string refNumField;
        
        private string resultField;
        
        private string resultCodeField;
        
        private string statusField;
        
        private string statusCodeField;
        
        private string vpasResultCodeField;
        
        /// <remarks/>
        public string AcsUrl {
            get {
                return this.acsUrlField;
            }
            set {
                this.acsUrlField = value;
            }
        }
        
        /// <remarks/>
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AvsResult {
            get {
                return this.avsResultField;
            }
            set {
                this.avsResultField = value;
            }
        }
        
        /// <remarks/>
        public string AvsResultCode {
            get {
                return this.avsResultCodeField;
            }
            set {
                this.avsResultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchNum {
            get {
                return this.batchNumField;
            }
            set {
                this.batchNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum {
            get {
                return this.batchRefNumField;
            }
            set {
                this.batchRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string CardCodeResult {
            get {
                return this.cardCodeResultField;
            }
            set {
                this.cardCodeResultField = value;
            }
        }
        
        /// <remarks/>
        public string CardCodeResultCode {
            get {
                return this.cardCodeResultCodeField;
            }
            set {
                this.cardCodeResultCodeField = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        public double ConvertedAmount {
            get {
                return this.convertedAmountField;
            }
            set {
                this.convertedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string ConvertedAmountCurrency {
            get {
                return this.convertedAmountCurrencyField;
            }
            set {
                this.convertedAmountCurrencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustNum {
            get {
                return this.custNumField;
            }
            set {
                this.custNumField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool isDuplicate {
            get {
                return this.isDuplicateField;
            }
            set {
                this.isDuplicateField = value;
            }
        }
        
        /// <remarks/>
        public string Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string VpasResultCode {
            get {
                return this.vpasResultCodeField;
            }
            set {
                this.vpasResultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Bank {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyObject {
        
        private string currencyField;
        
        private string decimalPlacesField;
        
        private string numericCodeField;
        
        private double rateField;
        
        private string textCodeField;
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DecimalPlaces {
            get {
                return this.decimalPlacesField;
            }
            set {
                this.decimalPlacesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumericCode {
            get {
                return this.numericCodeField;
            }
            set {
                this.numericCodeField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string TextCode {
            get {
                return this.textCodeField;
            }
            set {
                this.textCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class AccountDetails {
        
        private string cardholderAuthenticationField;
        
        private string checkPlatformField;
        
        private string creditCardPlatformField;
        
        private bool debitCardSupportField;
        
        private string directPayPlatformField;
        
        private string industryField;
        
        private CurrencyObject[] supportedCurrenciesField;
        
        /// <remarks/>
        public string CardholderAuthentication {
            get {
                return this.cardholderAuthenticationField;
            }
            set {
                this.cardholderAuthenticationField = value;
            }
        }
        
        /// <remarks/>
        public string CheckPlatform {
            get {
                return this.checkPlatformField;
            }
            set {
                this.checkPlatformField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardPlatform {
            get {
                return this.creditCardPlatformField;
            }
            set {
                this.creditCardPlatformField = value;
            }
        }
        
        /// <remarks/>
        public bool DebitCardSupport {
            get {
                return this.debitCardSupportField;
            }
            set {
                this.debitCardSupportField = value;
            }
        }
        
        /// <remarks/>
        public string DirectPayPlatform {
            get {
                return this.directPayPlatformField;
            }
            set {
                this.directPayPlatformField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyObject[] SupportedCurrencies {
            get {
                return this.supportedCurrenciesField;
            }
            set {
                this.supportedCurrenciesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchUploadStatus {
        
        private string approvedField;
        
        private string uploadRefNumField;
        
        private string declinedField;
        
        private string errorsField;
        
        private string finishedField;
        
        private string remainingField;
        
        private string startedField;
        
        private string statusField;
        
        private string transactionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string UploadRefNum {
            get {
                return this.uploadRefNumField;
            }
            set {
                this.uploadRefNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Declined {
            get {
                return this.declinedField;
            }
            set {
                this.declinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string Finished {
            get {
                return this.finishedField;
            }
            set {
                this.finishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Remaining {
            get {
                return this.remainingField;
            }
            set {
                this.remainingField = value;
            }
        }
        
        /// <remarks/>
        public string Started {
            get {
                return this.startedField;
            }
            set {
                this.startedField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyConversion {
        
        private double amountField;
        
        private string currencyField;
        
        private double fromAmountField;
        
        private string fromCurrencyField;
        
        private double rateField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public double FromAmount {
            get {
                return this.fromAmountField;
            }
            set {
                this.fromAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string FromCurrency {
            get {
                return this.fromCurrencyField;
            }
            set {
                this.fromCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class MerchantApplicationObject {
        
        private string altEmailField;
        
        private string billing_AccountField;
        
        private string billing_BankField;
        
        private string billing_RoutingField;
        
        private string cityField;
        
        private string companyField;
        
        private string contactField;
        
        private string countryField;
        
        private string emailField;
        
        private string faxField;
        
        private string fdms_MerchantIDField;
        
        private string fdms_MerchNumField;
        
        private string fdms_TerminalIDField;
        
        private string industryField;
        
        private string mobilePhoneField;
        
        private string paytech_ClientField;
        
        private string paytech_MerchIDField;
        
        private string paytech_TermIDField;
        
        private string phoneField;
        
        private string platformField;
        
        private string resellerEmailField;
        
        private string stateField;
        
        private string streetField;
        
        private string street2Field;
        
        private string urlField;
        
        private string vc_MENField;
        
        private string vc_MIDField;
        
        private string vc_MPAField;
        
        private string vc_PasswordField;
        
        private string vital_AgentField;
        
        private string vital_BinField;
        
        private string vital_ChainField;
        
        private string vital_CityCodeField;
        
        private string vital_MccField;
        
        private string vital_MerchCityField;
        
        private string vital_MerchNameField;
        
        private string vital_MerchStateField;
        
        private string vital_SidField;
        
        private string vital_TidField;
        
        private string zipField;
        
        private string usernameField;
        
        private string callInPasswordField;
        
        private string setupFeeField;
        
        private string discountRateField;
        
        private string perTranFeeField;
        
        private string annualSecFeeField;
        
        private string gatewayPackageField;
        
        private string sourceKeyNameField;
        
        private string pINField;
        
        private string emailOnActivationField;
        
        private string emailInstructionsField;
        
        private string checkProcessorField;
        
        private string directPayPlatformField;
        
        /// <remarks/>
        public string AltEmail {
            get {
                return this.altEmailField;
            }
            set {
                this.altEmailField = value;
            }
        }
        
        /// <remarks/>
        public string billing_Account {
            get {
                return this.billing_AccountField;
            }
            set {
                this.billing_AccountField = value;
            }
        }
        
        /// <remarks/>
        public string billing_Bank {
            get {
                return this.billing_BankField;
            }
            set {
                this.billing_BankField = value;
            }
        }
        
        /// <remarks/>
        public string billing_Routing {
            get {
                return this.billing_RoutingField;
            }
            set {
                this.billing_RoutingField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string fdms_MerchantID {
            get {
                return this.fdms_MerchantIDField;
            }
            set {
                this.fdms_MerchantIDField = value;
            }
        }
        
        /// <remarks/>
        public string fdms_MerchNum {
            get {
                return this.fdms_MerchNumField;
            }
            set {
                this.fdms_MerchNumField = value;
            }
        }
        
        /// <remarks/>
        public string fdms_TerminalID {
            get {
                return this.fdms_TerminalIDField;
            }
            set {
                this.fdms_TerminalIDField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string paytech_Client {
            get {
                return this.paytech_ClientField;
            }
            set {
                this.paytech_ClientField = value;
            }
        }
        
        /// <remarks/>
        public string paytech_MerchID {
            get {
                return this.paytech_MerchIDField;
            }
            set {
                this.paytech_MerchIDField = value;
            }
        }
        
        /// <remarks/>
        public string paytech_TermID {
            get {
                return this.paytech_TermIDField;
            }
            set {
                this.paytech_TermIDField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
        
        /// <remarks/>
        public string ResellerEmail {
            get {
                return this.resellerEmailField;
            }
            set {
                this.resellerEmailField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string vc_MEN {
            get {
                return this.vc_MENField;
            }
            set {
                this.vc_MENField = value;
            }
        }
        
        /// <remarks/>
        public string vc_MID {
            get {
                return this.vc_MIDField;
            }
            set {
                this.vc_MIDField = value;
            }
        }
        
        /// <remarks/>
        public string vc_MPA {
            get {
                return this.vc_MPAField;
            }
            set {
                this.vc_MPAField = value;
            }
        }
        
        /// <remarks/>
        public string vc_Password {
            get {
                return this.vc_PasswordField;
            }
            set {
                this.vc_PasswordField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Agent {
            get {
                return this.vital_AgentField;
            }
            set {
                this.vital_AgentField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Bin {
            get {
                return this.vital_BinField;
            }
            set {
                this.vital_BinField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Chain {
            get {
                return this.vital_ChainField;
            }
            set {
                this.vital_ChainField = value;
            }
        }
        
        /// <remarks/>
        public string vital_CityCode {
            get {
                return this.vital_CityCodeField;
            }
            set {
                this.vital_CityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Mcc {
            get {
                return this.vital_MccField;
            }
            set {
                this.vital_MccField = value;
            }
        }
        
        /// <remarks/>
        public string vital_MerchCity {
            get {
                return this.vital_MerchCityField;
            }
            set {
                this.vital_MerchCityField = value;
            }
        }
        
        /// <remarks/>
        public string vital_MerchName {
            get {
                return this.vital_MerchNameField;
            }
            set {
                this.vital_MerchNameField = value;
            }
        }
        
        /// <remarks/>
        public string vital_MerchState {
            get {
                return this.vital_MerchStateField;
            }
            set {
                this.vital_MerchStateField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Sid {
            get {
                return this.vital_SidField;
            }
            set {
                this.vital_SidField = value;
            }
        }
        
        /// <remarks/>
        public string vital_Tid {
            get {
                return this.vital_TidField;
            }
            set {
                this.vital_TidField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string CallInPassword {
            get {
                return this.callInPasswordField;
            }
            set {
                this.callInPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string SetupFee {
            get {
                return this.setupFeeField;
            }
            set {
                this.setupFeeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountRate {
            get {
                return this.discountRateField;
            }
            set {
                this.discountRateField = value;
            }
        }
        
        /// <remarks/>
        public string PerTranFee {
            get {
                return this.perTranFeeField;
            }
            set {
                this.perTranFeeField = value;
            }
        }
        
        /// <remarks/>
        public string AnnualSecFee {
            get {
                return this.annualSecFeeField;
            }
            set {
                this.annualSecFeeField = value;
            }
        }
        
        /// <remarks/>
        public string GatewayPackage {
            get {
                return this.gatewayPackageField;
            }
            set {
                this.gatewayPackageField = value;
            }
        }
        
        /// <remarks/>
        public string SourceKeyName {
            get {
                return this.sourceKeyNameField;
            }
            set {
                this.sourceKeyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PIN {
            get {
                return this.pINField;
            }
            set {
                this.pINField = value;
            }
        }
        
        /// <remarks/>
        public string EmailOnActivation {
            get {
                return this.emailOnActivationField;
            }
            set {
                this.emailOnActivationField = value;
            }
        }
        
        /// <remarks/>
        public string EmailInstructions {
            get {
                return this.emailInstructionsField;
            }
            set {
                this.emailInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string CheckProcessor {
            get {
                return this.checkProcessorField;
            }
            set {
                this.checkProcessorField = value;
            }
        }
        
        /// <remarks/>
        public string DirectPayPlatform {
            get {
                return this.directPayPlatformField;
            }
            set {
                this.directPayPlatformField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addCustomerCompletedEventHandler(object sender, addCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addCustomerPaymentMethodCompletedEventHandler(object sender, addCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void addMerchantApplicationCompletedEventHandler(object sender, addMerchantApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMerchantApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMerchantApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void bulkCurrencyConversionCompletedEventHandler(object sender, bulkCurrencyConversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bulkCurrencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bulkCurrencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyConversion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void captureTransactionCompletedEventHandler(object sender, captureTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class captureTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal captureTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void closeBatchCompletedEventHandler(object sender, closeBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void convertTranToCustCompletedEventHandler(object sender, convertTranToCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class convertTranToCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal convertTranToCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void copyCustomerCompletedEventHandler(object sender, copyCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void createBatchUploadCompletedEventHandler(object sender, createBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void currencyConversionCompletedEventHandler(object sender, currencyConversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class currencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal currencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyConversion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteCustomerCompletedEventHandler(object sender, deleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteCustomerPaymentMethodCompletedEventHandler(object sender, deleteCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteMerchantCompletedEventHandler(object sender, deleteMerchantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteMerchantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteMerchantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void disableCustomerCompletedEventHandler(object sender, disableCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void enableCustomerCompletedEventHandler(object sender, enableCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getAccountDetailsCompletedEventHandler(object sender, getAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBankListCompletedEventHandler(object sender, getBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bank[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bank[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBatchStatusCompletedEventHandler(object sender, getBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBatchTransactionsCompletedEventHandler(object sender, getBatchTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBatchUploadStatusCompletedEventHandler(object sender, getBatchUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerCompletedEventHandler(object sender, getCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerHistoryCompletedEventHandler(object sender, getCustomerHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMerchantCompletedEventHandler(object sender, getMerchantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMerchantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMerchantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MerchantObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MerchantObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerPaymentMethodCompletedEventHandler(object sender, getCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getCustomerPaymentMethodsCompletedEventHandler(object sender, getCustomerPaymentMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMerchantApplicationStatusCompletedEventHandler(object sender, getMerchantApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMerchantApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMerchantApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMerchantSummaryCompletedEventHandler(object sender, getMerchantSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMerchantSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMerchantSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MerchantSummaryObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MerchantSummaryObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getSupportedCurrenciesCompletedEventHandler(object sender, getSupportedCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupportedCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupportedCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTransactionCompletedEventHandler(object sender, getTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTransactionCustomCompletedEventHandler(object sender, getTransactionCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTransactionReportCompletedEventHandler(object sender, getTransactionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getTransactionStatusCompletedEventHandler(object sender, getTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void moveCustomerCompletedEventHandler(object sender, moveCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void pauseBatchUploadCompletedEventHandler(object sender, pauseBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void postAuthCompletedEventHandler(object sender, postAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void quickUpdateCustomerCompletedEventHandler(object sender, quickUpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quickUpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quickUpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void refundTransactionCompletedEventHandler(object sender, refundTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refundTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refundTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runBatchUploadCompletedEventHandler(object sender, runBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runCreditCompletedEventHandler(object sender, runCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runCheckCreditCompletedEventHandler(object sender, runCheckCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runCustomerTransactionCompletedEventHandler(object sender, runCustomerTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCustomerTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCustomerTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runQuickSaleCompletedEventHandler(object sender, runQuickSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runQuickCreditCompletedEventHandler(object sender, runQuickCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runAuthOnlyCompletedEventHandler(object sender, runAuthOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runAuthOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runAuthOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runSaleCompletedEventHandler(object sender, runSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runCheckSaleCompletedEventHandler(object sender, runCheckSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runTransactionCompletedEventHandler(object sender, runTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runTransactionAPICompletedEventHandler(object sender, runTransactionAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchBatchesCompletedEventHandler(object sender, searchBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchBatchesCountCompletedEventHandler(object sender, searchBatchesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchCustomerIDCompletedEventHandler(object sender, searchCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchCustomersCompletedEventHandler(object sender, searchCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchCustomersCountCompletedEventHandler(object sender, searchCustomersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchMerchantsCompletedEventHandler(object sender, searchMerchantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchMerchantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchMerchantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MerchantSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MerchantSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchMerchantsCountCompletedEventHandler(object sender, searchMerchantsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchMerchantsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchMerchantsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MerchantSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MerchantSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchMerchantsCustomCompletedEventHandler(object sender, searchMerchantsCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchMerchantsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchMerchantsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchTransactionsCompletedEventHandler(object sender, searchTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchTransactionsCountCompletedEventHandler(object sender, searchTransactionsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchTransactionsCustomCompletedEventHandler(object sender, searchTransactionsCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void searchCustomersCustomCompletedEventHandler(object sender, searchCustomersCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateCustomerCompletedEventHandler(object sender, updateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateCustomerPaymentMethodCompletedEventHandler(object sender, updateCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateMerchantCompletedEventHandler(object sender, updateMerchantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMerchantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMerchantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void voidTransactionCompletedEventHandler(object sender, voidTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class voidTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal voidTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void overrideTransactionCompletedEventHandler(object sender, overrideTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class overrideTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal overrideTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
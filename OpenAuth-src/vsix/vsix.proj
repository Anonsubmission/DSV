<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.props))\EnlistmentInfo.props" Condition=" '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.props))' != '' " />
	<Import Project="$(MSBuildProjectDirectory)\..\tools\DotNetOpenAuth.automated.props"/>
	<Import Project="..\projecttemplates\ProjectTemplates.props"/>

	<PropertyGroup>
		<ExtensionVsixLayoutDirectory>$(IntermediatePath)vsix\</ExtensionVsixLayoutDirectory>
		<ProjectTemplateSubdirectory>$(ExtensionVsixLayoutDirectory)PT\CSharp\Web\</ProjectTemplateSubdirectory>
	</PropertyGroup>

	<Target Name="Layout">
		<MSBuild Projects="..\projecttemplates\projecttemplates.proj" Targets="Zip" BuildInParallel="$(BuildInParallel)">
			<Output TaskParameter="TargetOutputs" ItemName="ProjectTemplateZipSource"/>
		</MSBuild>

		<ItemGroup>
			<ProjectTemplateZipSource>
				<HardLink>true</HardLink>
			</ProjectTemplateZipSource>
			<ProjectTemplateZipTargets Include="@(ProjectTemplateZipSource->'$(ProjectTemplateSubdirectory)%(FileName)%(Extension)')" />

			<ExtensionVsixTransformSource Include="
																					 $(ProjectRoot)vsix\extension.vsixmanifest;
																					 $(ProjectRoot)LICENSE.txt;
																					 ">
				<BeforeTokens>$version$</BeforeTokens>
				<AfterTokens>$(BuildVersion)</AfterTokens>
				<SkipUnchangedFiles>false</SkipUnchangedFiles>
			</ExtensionVsixTransformSource>
			<ExtensionVsixTransformLayout Include="@(ExtensionVsixTransformSource->'$(ExtensionVsixLayoutDirectory)%(RecursiveDir)%(FileName)%(Extension)')" />

			<ExtensionVsixSources Include="
														$(ProjectRoot)vsix\*;
														" Exclude="
														$(ProjectRoot)vsix\extension.vsixmanifest;
														$(ProjectRoot)vsix\$(MSBuildThisFile);
														">
				<SkipUnchangedFiles>true</SkipUnchangedFiles>
			</ExtensionVsixSources>
			<ExtensionVsixTargets Include="@(ExtensionVsixSources->'$(ExtensionVsixLayoutDirectory)%(FileName)%(Extension)')" />

			<ExtensionVsixContents Include="
														 @(ExtensionVsixTargets);
														 @(ExtensionVsixTransformLayout);
														 @(ProjectTemplateZipTargets);
														 "/>
		</ItemGroup>

		<CopyWithTokenSubstitution SourceFiles="@(ExtensionVsixTransformSource)" DestinationFiles="@(ExtensionVsixTransformLayout)" />
		<Copy SourceFiles="@(ExtensionVsixSources)" DestinationFiles="@(ExtensionVsixTargets)" SkipUnchangedFiles="true" />
		<HardLinkCopy SourceFiles="@(ProjectTemplateZipSource)" DestinationFiles="@(ProjectTemplateZipTargets)" />
		<Purge Directories="$(ExtensionVsixLayoutDirectory)" IntendedFiles="@(ExtensionVsixContents)" />
	</Target>

	<Target Name="VSGalleryVsixLayout" DependsOnTargets="Layout">
		<!-- Build individual VSIX files for each project template for the Visual Studio Gallery,
		     which only allows one project template per VSIX. -->
		<ItemGroup>
			<VSGalleryVsixRawSources Include="$(ExtensionVsixLayoutDirectory)*"
															 Exclude="$(ExtensionVsixLayoutDirectory)*.vsixmanifest">
				<VSGalleryVsix>$(DropsRoot)$(ProductName) %(ProjectTemplateZipTargets.FileName)-$(BuildVersion)-vs2010.vsix</VSGalleryVsix>
				<TopLevelTemplate>%(ProjectTemplateZipTargets.FileName)</TopLevelTemplate>
			</VSGalleryVsixRawSources>
			<VSGalleryVsixSources Include="@(VSGalleryVsixRawSources)">
				<TargetPath>$(IntermediatePath)%(TopLevelTemplate).vsix\%(FileName)%(Extension)</TargetPath>
			</VSGalleryVsixSources>

			<VSGalleryVsixZipSources Include="$(ExtensionVsixLayoutDirectory)**\*.zip" />
			<VSGalleryVsixSources Include="@(VSGalleryVsixZipSources)">
				<TopLevelTemplate>%(FileName)</TopLevelTemplate>
				<VSGalleryVsix>$(DropsRoot)$(ProductName) %(FileName)-$(BuildVersion)-vs2010.vsix</VSGalleryVsix>
				<!-- The A in the path below used to be %(FileName), but to fit inside MAX_PATH when VS expands, we shorten it. -->
				<TargetPath>$(IntermediatePath)%(FileName).vsix\%(RecursiveDir)A%(Extension)</TargetPath>
			</VSGalleryVsixSources>

			<VSGalleryVsixSources Include="@(ProjectTemplateZipTargets->'$(ProjectRoot)projecttemplates\%(FileName).vsixmanifest')">
				<VSGalleryVsix>$(DropsRoot)$(ProductName) %(ProjectTemplateZipTargets.FileName)-$(BuildVersion)-vs2010.vsix</VSGalleryVsix>
				<TopLevelTemplate>%(ProjectTemplateZipTargets.FileName)</TopLevelTemplate>
				<TargetPath>$(IntermediatePath)%(ProjectTemplateZipTargets.FileName).vsix\extension.vsixmanifest</TargetPath>
				<Transform>true</Transform>
				<BeforeTokens>$version$</BeforeTokens>
				<AfterTokens>$(BuildVersion)</AfterTokens>
				<SkipUnchangedFiles>false</SkipUnchangedFiles>
			</VSGalleryVsixSources>

			<VSGalleryVsixTargets Include="@(VSGalleryVsixSources->'%(TargetPath)')">
				<WorkingDirectory>$(IntermediatePath)%(TopLevelTemplate).vsix</WorkingDirectory>
			</VSGalleryVsixTargets>
			<VSGalleryVsixPathsToPurge Include="@(ProjectTemplateZipTargets->'$(IntermediatePath)%(FileName).vsix')"/>
		</ItemGroup>

		<HardLinkCopy
			SourceFiles="@(VSGalleryVsixSources)"
			DestinationFiles="%(VSGalleryVsixSources.TargetPath)"
			Condition=" '%(VSGalleryVsixSources.Transform)' != 'true' "/>
		<CopyWithTokenSubstitution
			SourceFiles="@(VSGalleryVsixSources)"
			DestinationFiles="%(VSGalleryVsixSources.TargetPath)"
			Condition=" '%(VSGalleryVsixSources.Transform)' == 'true' "/>
		<Purge
			Directories="@(VSGalleryVsixPathsToPurge)"
			IntendedFiles="@(VSGalleryVsixTargets)" />
	</Target>

	<Target Name="Build" DependsOnTargets="Layout;VSGalleryVsixLayout" Returns="@(GeneratedVsix)">
		<PropertyGroup>
			<ExtensionVsix>$(DropsRoot)$(ProductName) SDK-$(BuildVersion)-vs2010.vsix</ExtensionVsix>
		</PropertyGroup>
		<ItemGroup>
			<GeneratedVsix Include="$(ExtensionVsix)">
				<IncludeInDrop>true</IncludeInDrop>
			</GeneratedVsix>
			<GeneratedVsix Include="%(VSGalleryVsixTargets.VSGalleryVsix)">
				<VSGallery>true</VSGallery>
			</GeneratedVsix>
		</ItemGroup>

		<Zip
			Files="@(ExtensionVsixContents)"
			ZipFileName="$(ExtensionVsix)"
			WorkingDirectory="$(ExtensionVsixLayoutDirectory)"
			ZipLevel="$(ZipLevel)"
			/>

		<Zip
			Files="@(VSGalleryVsixTargets)"
			ZipFileName="%(VSGalleryVsixTargets.VSGalleryVsix)"
			WorkingDirectory="%(VSGalleryVsixTargets.WorkingDirectory)"
			ZipLevel="$(ZipLevel)"
			/>
	</Target>

	<Import Project="$(ProjectRoot)tools\DotNetOpenAuth.automated.targets"/>
	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.targets))\EnlistmentInfo.targets" Condition=" '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.targets))' != '' " />
</Project>